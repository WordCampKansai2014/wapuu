%!PS-Adobe-3.0 %%Creator: Adobe Illustrator(R) 8.0%%AI8_CreatorVersion: 17.1.0%%For: (\612p\623c \610\673\611\700) ()%%Title: (wapuu_WCKansai.ai)%%CreationDate: 2014/04/23 12:17%%Canvassize: 16383%%BoundingBox: 215 323 432 584%%HiResBoundingBox: 215.9983 323.959 431.3194 583.1795%%DocumentProcessColors: Cyan Magenta Yellow Black%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.2 0%%+ procset Adobe_ColorImage_AI6 1.3 0%%+ procset Adobe_Illustrator_AI5 1.3 0%%+ procset Adobe_cshow 2.0 8%%+ procset Adobe_shading_AI8 1.0 0%AI5_FileFormat 4.0%AI3_ColorUsage: Color%AI7_ImageSettings: 0%%RGBProcessColor: 0 0 0 ([\603\614\603W\603X\603g\603\614\601[\603V\603\607\603\623])%%AI6_ColorSeparationSet: 1 1 (AI6 Default Color Separation Set) %%+ Options: 1 16 0 1 1 1 0 0 0 0 1 1 1 18 0 0 0 0 0 0 0 0 -1 -1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 1 2 3 4%%+ PPD: 1 21 0 0 60 45 2 2 1 0 0 1 0 0 0 0 0 0 0 0 -1 -1 () %AI3_TemplateBox: 297.5 420.5 297.5 420.5%AI3_TileBox: -8.5 25 603.5 817%AI3_DocumentPreview: None%AI5_ArtSize: 595 842%AI5_RulerUnits: 6%AI5_ArtFlags: 0 0 0 1 0 0 1 0 0%AI5_TargetResolution: 800%AI5_NumLayers: 1%AI8_OpenToView: -304 667 1.5 1359 756 18 0 0 395 323 0 0%AI5_OpenViewLayers: 7%%PageOrigin:-173 0%AI7_GridSettings: 72 8 72 8 1 0 0.8 0.8 0.8 0.9 0.9 0.9%AI9_Flatten: 1%AI12_CMSettings: 00.MS%AI7_Thumbnail: 108 128 8%%BeginData: 19736 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF%0066000066330066660066990066CC0066FF009900009933009966009999%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333%3333663333993333CC3333FF3366003366333366663366993366CC3366FF%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033%6600666600996600CC6600FF6633006633336633666633996633CC6633FF%6666006666336666666666996666CC6666FF669900669933669966669999%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF%9933009933339933669933999933CC9933FF996600996633996666996699%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100%000011111111220000002200000022222222440000004400000044444444%550000005500000055555555770000007700000077777777880000008800%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF%524C45FD1BFF7D272027265252A1A8FD62FFA827F827F826F8F8F8274BA8%FD61FF2020F8272027F827F820F87DFD60FF7DF8F8F820527D2720F820F8%4BA8FFFFFF7D7D7DFD5AFF2727F84BFFFFA852F827F852FFFF7D20F82727%7DA8FD58FF2026F87DFFFFFF7DF827F87DFF52F826F826F8F827A8FD56FF%7DF82052FD04FF7DF82727FF52F82027F827F820F852A8FD54FF52F8F87D%FD05FF27F8F87DFF27F8F8202727F820F8277DFD52FF7D27F827A8FD05FF%7626F87DFFFF2726F87DFF7DF827F82052FD50FF5220F8F84BFD06FF7DF8%F852FFFFA8F820F8FFFFA82720F8F827FD4EFF5220F82027FD04FFAFFFFF%52F8F87DFFFFFF52F8207DFFFFFF2E26F8F827FD4CFF52F8F8F827FFFFFF%A88484FFFF52F8F87DFFFFFF52F8F87DFFFFFFAF2E20F8F827FD08FF7D52%7DA8FD3EFFA827F82052FD04FF8536AFFFFF5220F87DFFFFFF52F8267DFF%A9FFFFAF5326F8207DFD06FF7DF8F8F82752A8FD3CFF27F82027FD04FFA9%366084FFFF7EF820F8A8FF52F826F8A8FF8584FFA88B2E20F827A8FD05FF%27F8F826F820F852A8FD39FFA8F827F8FD05FF60605A85FFFF8427F82720%27F827F85985FF5A61A9FF858B2726F852FD05FF7DF8272027F827F827A8%FD38FF27F8F87CFFAFA9FFA8605A5A5AFFFFAF5920F820F820F82E8485A9%84368584858584F820F8A8FD05FF52F8202752F820F827A8FD37FF27F827%A8FF85FFFFAF5A615A6184FFAF8B5927F827275985AF85AF61855A858484%8452F8272027275252A87D27F827FFA8F827F87DFD2BFFA87D527D7DA8A8%FD04FFA8F82027FFA885FFFF84605A605A6084A9848B84845985858B8484%592F27280527F827F820F827FD05F827F827F8A8FF7DF820F8FD2BFF76F8%20F820F82752A8FFFFA827F828FFAF60AFFFAF5A855A615A858585848B85%AF8584522EF827F8F8F8272027202726272027F821F827F827F827A8FFFF%52F8207DFD2AFF27F8F827FD05F852FFFFF820F8A9A9855AFFA95A5A605A%5A5A60608584845227F8F8F8202051507B7AA5A4C79EC7A4C79E9F745126%27F8F827FFFFFF52F8F876FD2AFF7DF82720272727F827F852FF52F82759%AF846160FF84615A855A855A855A532720F8274A7B9ECCC7CCC7CCC7CCC7%CCC7CCC7CCC7CCCCA52620F8FD04FFA8F82052FD2BFF52F827F8A8A852F8%20F87D7DF8F82784855A605A845A605A605A5A2820F820267B9ECCC7C7A4%C7A4C7A4C7A4C7A4C7A4C7A4CCA451F8F827A8FD04FF7D20F852A1A87DA8%A8CAA8A8A8CAA8A8A8CAA8A8A8CAA8A8A8CAA8A8A8FD13FF52F82651FFFF%7DF82627FF2727F85385855A615A615A856059F820F84B7ACCC7CCC7CCC7%C7C7CCC7C7C7CCC7C7C7CCC7CC7A27F82752FFFFFFA9FFFF7DF827F827F8%272027F8272027F8272027F8272027F8272027F8272027F827A1FD10FFA8%20F827A8FFA827F8F8A87DF820F884845A5A605A61592EF8F8209FC6C7A4%C7A4C7A4C7A4C7A4C7A4C7A4C7A4C7A4CC7AF8F852A8FFFFFFA86084FF27%F8F827F820F826F820F826F820F826F820F826F820F820F820F826F820F8%27A8FD10FF2727F8A8FFFF5220F8A8FF52F8262EAF5A855A855927F82750%CCC7CCC7CCC7C7C7CCC7C7C7CCC7CCC7CCC7C7C7CCA527F859FFFFA9AF85%855AFFA826F827262720272027F827F827F827F827F827F827F827202720%27F827F827F8A7FD10FF52F8207DFFFF7DF8F852FFA820F82784855A612F%20F8279ECCC6C7A4C7A4C7A4C7A4C7A4C7A4C7A47A74C7C6C7C67BF82EAF%FF84855A605A60FF52F820209F9E75749F98997499747574997475749974%99749F989F74997426F8207DFD10FF2720F8A8AFFF7D26F852FFFF2726F8%8485852E27F851A4CCC7C7C7CCC7C7C7CCC7C7C7CCC7C7C751F8F850CCC7%C726275AAF84855A605A6185FF2627F8272699264B9EC1C1C19EC1C1C19E%C1C1C19EC1C1C19EC1C1C1C075F827F8FD10FFA827F827A8AF5AA8F826F8%7D5227F8265A8B52F8F851C6C7A4C7A4C7A4C7A4C7A4C7A4C7A4C7C6C7F8%F8F826A4C7A426F88584855A605A5A5AFF7EF82651F8F8F827F8759EC198%C198C198C198C198C198C198C198C19E99F827F852FD10FF52F8204BFFA9%61A976F827F827202027AF5926F87BC7CCC7CCC7C7C7CCC7C7C7CCC7C7C7%CCC7CCC751F8F850CCC7C72028858B60855A615AAF8584F851C77BF82720%2726C1C1C19EC19FC19EC19FC19EC19FC19EC1C19F20272027A8FD0FFF52%F827F8A8FFA93685A827F820F82027855A27F851C6CCA4C7A4C7A4C7C6CC%C7CCA4C7A4C7A4C7A4C7A47B7AC7A4C7A426F88584845A605A8484858427%F8759E27F827272074C19EC198C19EC198C19EC198C19EC19E9F20F8F8F8%52FD0FFF52F827F87DFFFF84615AFFA8592852538B8427F851C79F9ECCC7%C7C7CCC7A5747574C7C7CCC7C7C7CCC7C7C7CCFD04C726275AAF60605A85%848584AF5926F820F8275959F8274A9FC1C19EC19FC19EC19FC19EC19E75%F82720F84BFD0FFF52F827F852FFFFA85A5A60A8FF8485848B8427F8269E%26F8F874CCA4C79E4AFD04F89EC7A4C7A4C7A4C7A4C7A4C7A4C7C651F859%85855A5A5A858485848559522752598B2E20F8F8F84B749F9EC19EC198C1%9E9F6E27F820F8F827FD0FFFA8F827F87DFFFFFF855A855A85A9AF85AF84%52F8279EA5F8F8F851C7CCA527FD04F826CCC7CCC7C7C7CCC7C7C7CCC7C7%C7CC7BF82EAF85615A85848B848B858B85AF858B8559F84BF827F8272675%7499749F74512627F827F82776FD10FF27F8F852FFFF84A95A605A605A85%848B5A27F82150CC9E26F8F874CCC7A5FD05F8C7C7C7A4C7A4C7A4C7A4C7%A4C7A4C7C67BF85285855A5A5A618485848584858485858527209E9FF827%F820F827F820F827F820F820F8277DFD10FFA827F827A8FFA9855A855A5A%5A8561855227F82720C7C7CC9E757AC7C7CCC79F505150C7C7CCC7C7C7CC%C7C7C7CCC7C7C7CCC79FF8275A8B84855A615A858485848B84855A532727%F8517B75F8272027F827F827F827F820277DFD12FF7DF82027AFAF85FD04%5A35615A5927F8F827F851C6C7A4C7C6CCA4C7A4C7C6CCC6CCC6C7A4C7A4%C7A4C7A4C7A4C7C6CCA47BF8F82E8584855A605A605A605A605A613527F8%202026F8F87A26F8272027F827F82727767DFD14FF5220F859AFFF84615A%852F5A59522027F82720279ECCC7C7C7CCC7C7C7CCC7CC7A4B50C7C7CCC7%CCC7CCC7CCC7CCC7A55027F82753AF858B84855A592727275A5A855A27F8%52A8A1F82774CC7427F827A8FFA8FD19FF52F820538B84855A605A2E0520%F821F84B742726C7A4C7A4C7A4C7A4C7A4CC9E26F8F8F85174A5A4C7A49F%74752627F8F8F82727595A8585852F27F8F8F8202F615A53F84BFFFF27F8%74CCC7C7F827F87DFD1BFF52F8F859858584856059F827F8274A9FC175F8%51C7C7C7CCC7C7C7CCC7CCA44BF8270527F821F8272627F800F800F827F8%27F821F82727532F27F8524B202885605A2720A1FFA12126CCC7CCC775F8%2727FD1BFF7DF8F8278B84855A6128F8F8274A99747526F826C7A4C7A4C7%A4C7A4CC9E26F8272E2F2828F820F800F8262675747B7A9F747B4A4BF8F8%F820F852FF52F8532E2EF8F8F8FFFF7DF851C6C7A4CC9E20F826A8FD1AFF%A827F827848B8485605AF8272027F827F827F8279FCCC7CCC7CCC7CC7527%F8272F5A2F5A2E27F827509FA5CCC7CCC7CCC7CCC7CCC7C77A51F827FFFF%2027F821F8272027FFFF7D0050CCC7CCC7CC2627F87DFD17FF7DFFFFFF27%F8F85985855A605A2FF827F820F827F827F84B9EC7A4C79E7526F8F8272E%352F2F2826F84B9ECCC7C7A4C7A4C7A4C7A4C7A4C7C6CC74F852FFA827F8%4A507B9E26F8A8FFA8F84BC6C7A4C7C77BF82027FD15FFA8272027FFFF7D%F827F88585855A85605A282E282E2E592E27F8274A512627F820F82E2F59%2F5A2F27F851C7CCC7CCC7C7C7CCC7C7C7CCC7C7C7CCC77BF87DFFFF2727%9FCCCCCC2627A8FFFF27F8A5C7C7C7CC9F27F827A8FD13FFA8FD04F852FF%A827F8F8278B84855A855A5AFD062F2827FD05F82705FD062F28F84AA4C7%A4C7A4C7A4C7A4C7A4C7A4C7A4C7A4CC74F852FFFF7DF8277A9F4AF827FF%FFFF52F826CCA4C7A4C726F8F87DFD13FF2027F827F87DFFFFA827F82784%852F2E2E60605A2F592F592F5A2F2F282E2859597E595A2F592F2F27277A%CCC7C7C7CCC7C7C7CCC7C7C7CCC7C7C7CCC79FF852FFAFFF52F8F8F820F8%A8FD04FF27217BCCC7CCC775F82652FD12FF2720F820F8F87CFFFFFF4BF8%F827FD05F85A5A5AFD072F5A84AFFD06FFA8A8532720C7A4C7A4C7A4C7A4%C7A4C7C6C7A4C7A4C7A4C7A426F8FF84AFA959282E2E84FFFF5AFFAFA7F8%279EC7A4CC7AF8F84BFD11FF76F8F84B5226F87DFFFFFF7DFD04F82651F8%F827855A59FD042F59AFFFFFA9A97EA884A9A8FFFFFFF827A5CCC7CCC7CC%C7CCC7CCC7CCC7CCC7CCC7C7C7CC2627A8AF608585AF858B85FF8460A8AF%AF52F851FD04C72027F8FD10FFA827F8F87DA8F8F827FFFFA8FD04F850C7%C69FF8F859602F2F2F5384FFA87EFD042F06FD042F84A84BF84B7AA59EC7%9E9F747B50514A515075749FA4C77420F88484855A85848584855A605AA9%84855A20F8C7C6C7A427F8F87DFD0FFFA8F82727FFA827F827FFFF52F8F8%F87ACCC7CCC726F85A5A592F7EFFFF7E352F592F592F592F592F592F5A2E%27F821F8272627F827F820F821F8F8F827F8272027F859858B84615A8B85%8B84855A618485848B27279FCCC7CC5027F87DFD0FFF5220F87DFFFF27F8%F876A827F8F874CCA4C7C6C7F8F82F2F2E84FFA8FD102F2E522727F827F8%2700282728272E282E0527F8210559858584855A60848584605A605A855A%85852EF89FC7C7C675F8F852FD0FFF52F827A8FFFFA8F827F827F8F8F8CC%C7C7C7CC74F8F82F2FA8FF842F2F2F592F2F2F592F2F2F59FD042F5AFD05%FFA85A2F2F2F5A2F5A2F8560615A848485858B85855A855A85848B60615A%855A6060AF28207ACCC7CC7A27F852FD0FFF27F8F8A8FFFFFF52F8F8F820%F826A4CCC6CC7AF8F8270D84FF5A06FD0F2F59FD07FFA8FD062F5A5A605A%605A85848560855A5A5A60848584855A5A5A605A858427F8A5A4C7C69FF8%2027FD0FFF52F8277DFD04FF7D272727F8F875C7C77426F8272F84FF842F%592F592F592F2F2F59FD052F592FA9FD08FFA82F2F592F595A855A855A85%5A855A855A855A855A8584855A615A855A858584F84BC7CCC7CC9F27F827%A8FD0EFF52F8F852FFFFAFFFFFFF84852EFD06F8272E5AFF8406FD082F59%2F5A5984592F2F2F7EFD09FF5AFD042F5A5A605A605A605A5A5A615A5A5A%615A605A605A5A5A85858527F874CCA4C7C6C72027F8A8FD0EFFA8F827F8%A8FFFF84AFAFAF85AF5200F8F8F82F2F35A9A82F5A592F2FA8A8AFA8FD06%FF842F592F7EFD0AFF2F2F2F5335615A855A615A855A855A5A2F5A5A855A%615A855A85858528F826CCC7C7C7CCC74BF827A8FD0FFF52F8F827FFFFAF%36605A845A855A5A2F605A2F59FF5AA9FFAF2F59FD07FFAF5359FD052FAF%FD06FF84FFFF84FD052F5A5A605A605A5A352F2E2F35605A605A5A5A8585%7EF8F820A5C6C7C6C7A4C726F8F87DFD0FFFA827F82727FFFFAF5A615A85%5A856085605A2FFD05FF5A2F2F5A53FD05FFA9352F592F592F2F5AFD06FF%8484FFFF5A2F592F2F2F5A2F5A2F5A2F2F2F592F5A5A855A615A858584F8%2126C7C7CCA5A5C7CCC751F8267DFD10FF7DF8F82020A8FFAF5A5A365A5A%5A2F592F84FFFFFFA9FD062FA8FD05FF53FD072F84FD05FF7E59FFFF5AFD%0F2F5A605A605A84848527F84AC7C6C7C651F87BC6CC50F8F87DFD11FF7D%26F827F884AF855A60FD052F59AFFFFFFFA92F2F592F2F2FA9FD05FF842F%592F2F2F592F5AFD05FF842FFFFFAF2F2F2F592F2F2F592F2F2F592F2F2F%855A615A85858B592026CCC7CCC7C7260026C7C77BF82052FD12FF7D27F8%20F85984855A5AFD042F59FD05FFFD062F59FD05FFA8FD082FA8FD04FF59%2F7EFFA859FD0D2F5A5A605A5A5A858553F87BC6C7A4C79E26F8F87ACC50%00F852FD13FFA84BF827278585855A612F532FAFA8FD04FF5A2F592F592F%5AFD06FF2F592F592F592F2F59FD04FF5A2F7EFFFF5A2F2F592F592F592F%592F592F5A5A855A615A8585AF59214ACCC7CCCC75F827F851CC7BF82052%FD10FF527DFFFFA827F8F8538B84855A5A2F2FA85AAFFFFFFF53FD062FFD%06FF7E0CFD072FA8FFFFFF2F2F2FFFFF84FD0B2F5A5A605A605A60608584%85F8F850A59E75F827532726CC5000F852FD0FFF27F8F852FFFF7D20F852%858B85855A2F59FF2FFD04FF7E2F2F2F592F2F84FD05FFA82F2F592F2F2F%592FAFFFFFA82F2F59AFFF84FD042F592F2F2F595A615A855A615A855A85%848B8584F8F82026F827598B2727C77BF82052FD0EFF7DF8F820F87DFF7D%F820288584855A5A0684842FA8FFFFFF7EFD062F5AFD06FFFD082F84FFFF%840C2F2FAFFFA80CFD072F5A615A5A5A605A5A5A605A8584858584272705%2E598B8427F8C774F8F852FD0EFF76F827F827F8272027F859858B85855A%2FA8A92FAFFFFFFFAF2F592F592F2F2FFD06FF842F592F592F592FFFFFFF%592F2F59A8FFA8592F592F592F535A855A855A855A855A855A6184AF8585%85AF848585AF85852727C77BF82652FD0EFF2627F827F826F820F8278485%84855A5A2FAF7E2F7EFFFFFFA8FD062F5AFD06FF84FD062F59A9FFA8FD04%2FA9FFA8FD072F605A605A605A605A605A605A605A85848584858485848B%59F826CC50F8F876FD0EFF27F8278459F827F8285AAF85856085352FA984%2F84FD04FF53FD052F84FD07FF2F2F2F592F2F53FFFFA92F592F2FA8FF84%2F2F592F2F2F5A5A615A855A615A605A615A855A615A858485848B858B84%27F87BCC7BF82052FD0EFFF820F885858459848485848560605A2F2FAF59%2F53FD04FF7E06FD042FA9FD07FF84FD052F7EFFFF59FD042FFFFF840DFD%062F615A5A5A605A5A2F615A5A5A605A5A5A606085848B5927F84BA4CC4A%00F87DFD0EFF27F827848B85AF858B84AF84855A5A2F59AF842F59AFFFFF%FFA8352F592F5AFFA97EFD05FFA92F2F592F2F84FFFF5A2F592F5AFFFF7E%2F2F592F592F5A5A855A855A852F5A60855A855A855A85858B85842E27F8%51A5CCC775F8207DFD0EFF27F8F8598585848560855A615A592F2F2FFF5A%2F2FA8FD04FFFD052FFF7E2FFD06FF53FD042FFFFFA9FD042F59FFFF5AFD%072F5A5A605A602F2F2F615A605A605A60848B8452F8F8F875A4CCC6C726%21F87DFD0EFF7DF827F884858B5A615A603559FD042FA9A82F2F5AFD04FF%842F592F7EFF842FA9FD05FFA92F2F2F7EFFFF5AFD042FA9FFFF2F592F2F%2F592F2F2F5A355A2F532F5A5A855A615A85848B8452F82750C7C7CCC7CC%C751F8277DFD0EFFA827F820F85984855A605A5AFD042F06A9A82F2E59A9%FFFFFFA82F2F2F7EFF2F2F59FD05FFA82F2F2F7EFFFF592E2F2F2FA8FF84%FD102F605A605A5A5A858427F8279ECCA4C7A4C7A4C720F8F8A8FD0FFFA8%27F827F827287D84855A855A5A2F2F84FF2F592FA9FD04FF592F2FA9FF5A%2F2FA8FD05FF5A2F2FAFFFAF2F592F2F59FFFF7E2F592F592F592F592F59%2F592F592F5A5A855A855A858559F84BA5CCC7CCC7C7C7CCA527F827A8FD%10FFA827F820F820F82759855A615A2F2F5AFF5A2F2F59FD04FFA8062FA8%FF2F2F2F7EFD05FFAF2F2FA8FF7EFD042FA9FFFFFD102F5A605A605A6084%85F8F87ACCA4C7A4C7A4C7C69FF8F826FD13FF7D2727F827F827598B5A85%5A2F2FFF842F2F2FA8FD04FF592FFFA8FD042FFD06FF5A59FFFF5A2F5A2F%7EFFFF7EFD042F592F2F2F592F2F2F592F2F2F855A855A855A8B59204ACC%C7CCC7C7C7CCC7CC7427F852FD15FFA87D2020F82053855A5A2F2F7EFF2F%2F067EFD04FF7E2FA8A8FD042F7EFD05FF7E7EFFAF2F2F0500F82752FD10%2F5A5A5A595A2F5A8553F87BC6C7A4C7A4C7A4C7C675F8F852FD17FFA8F8%27F8F8052E282F2F5AFF842F592FFD05FF2FFF842F2F592F5AFD06FFA8FF%842EFD07F82F2F592F592F592F592F592F5A2F2E2827FD05F827050074CC%C7CCC7C7C7CCC7CC4A27F87DFD17FF27FD08F8282FAFFF2F2F2F59FD04FF%84AF84FD052F84FD07FF53F8F8267B7A7BF8F8F828FD072F592F2E00FD0D%F850C7C6C7A4C7A4C7A426F827A8FD16FF27F8F8F8267B7451F8F8F8052F%FFA82F2F2FA8FD05FF5AFD062FFD07FFF8F826CCC7CCC7C726F8F82E2F2F%2F592F5A2E27F8F8F826507B9EC7A5C79E9F5026F8F826C7C7CCC7C7C7A5%F82720FD16FF7DF8F8F84AC7C6CCC6A526F8F8057EFF592F065AFD05FF7E%06FD052F7EFD05FF59F8F8C7C6C7A4C7C6C726F8F8FD052F05F8F8F8267B%A4CCC6C7A4C7C6C7C6CCA450F8F8F8C7A4C7A4CC5000F852FD16FF52F8F8%26CCC7CCC7C7C7CC50F8F82FA9FF5A2F2FA9FD04FF5A2F2F592F592F5AFD%05FF52F851C7CCC7C7C7CCC7CC26F800592F5300F8F84B9FCCC7CCC7C7C7%CCC7C7C7CCC7CCC79FF8F89ECCC7CCC751F8207DFD16FFF8F8F89FC7C7A4%C7A4C7C6CC26F8F859A9FF592F2FFD04FF7E2EFD062F84FD04FF05F874CC%A4C7A4C7A4C7C7A5F8F8062FF8F8F87AC6CCC6C7A4C7A4C7A4C7A4C7A4C7%A4C7C6A57AC7A4C7C6C7F827F8A8FD15FF7D20F826A4CCC7C7C7CCC7C7C7%A5F8F8055AAFFF7E2F5AFFFFFF7E2F2F59FD052FFD04FF27F87BC7C7C7CC%C7C7C7CCC77BF805F8F8F8A5C7C7C7CCC7C7C7CCC7C7C7CCC7C7C7CCC7C7%C7CCC7C7C7CC7B21F84BFD16FF7DF8F826C7A4C7A4C7A4C7A4C7C64AF800%2E59A8FFA85A84FFFF840CFD072F59FFFFFF27F850CCA4C7A4C7A4C7A4C7%A426F8F8F8A5C6C7A4C7A4C7A4C7A4C7A4C7A4C7A4C7A4C7A4C7A4C7A4C7%C651F8F852FD16FF7D20F826C7CCC7C7C7CCC7C7C7CC9FF8F82F2F5984FF%FFAFFFFF84FD062F5A59A9FFFFFF7DF875C7CCC7CCC7C7C7CCC7CC74F8F8%C7C7CCC7C7C7CCC7C7C7CCC7C7C7CCC7C7C7CCC7C7C7CCFD04C72027F8A8%FD16FFA8F8F8F8C7A4C7A4C7A4C7A4C7A4CC26F8F8592F2F59FD05FF7E7E%597E7EA8A8FD04FFA928F826CCC6C7A4C7A4C7A4C7C7A5F8F89EC7A4C7A4%C7A4C7A4C7A4C7A4C7A4C7A4C7A4C7A4C7A4C7A4CC5021F84BFD17FFA827%F8F87ACCC7CCC7C7C7CCC7C7C79FF8F82E5A2F2F2F84A9FD0BFF845A2F2F%F826A4CCC7C7C7CCC7C7C7CCC74AF87BC7C7C7CCC7C7C7CCC7C7C7CCC7C7%C7CCC7C7C7CCC7C7C7CCA527F8207DFD18FF27F8F850C6C7A4C7A4C7A4C7%A4C7A426F827FD042F062F538484AFA8AFA8A97E5AFD042F2EF8F89FC6C7%A4C7A4C7A4C7A4CC50F826CCA4C7A4C7A4C7A4C7A4C7A4C7A4C7A4C7A4C7%A4C7A4C7C675F8F820FD19FF7DF8F8F8C7C7CCC7C7C7CCC7C7C7CC50F8F8%592F592F59FD052F592F592F2F2F592F592F5A00F874CCC7C7C7CCC7C7C7%CCC79FF827C7CCC7CCC7C7C7CCC7C7C7CCC7C7C7CCC7C7C7CCFD04C72027%F8A1FD19FFA827F8F850CCA4C7A4C7A4C7A4C7C6A5F8F8285AFD132F28F8%50C6C7A4C7A4C7A4C7A4CC9EF8F8C7C6C7A4C7A4C7A4C7A4C7A4C7A4C7A4%C7A4C7A4C7C6C72621F827FD1BFF52F8F826C7CCC7CCC7C7C7CCC7C7C74B%F82E5A5A2F2F2F592F2F2F592F2F2F592F2F2F592F5A28F826C7C7CCC7C7%C7CCFD04C7F8F87ACCC7C7C7CCC7C7C7CCC7C7C7CCC7C7C7CCC7C7C7CC74%21F826A1FD1BFFA8F8F8F874C6C7A4C7A4C7A4C7A4CC50F8F8845A5A2F2F%2EFD0F2FF8F89EC7A4C7A4C7A4C7A4C7A426F87AC6C7A4C7A4C7A4C7A4C7%A4C7A4C7A4C7A4C7A4CC7A21F8F851FD1DFF7DF8F8F8A5C7CCC7C7C7CCFD%04C7F8F853AF84855A5A355A2F592F2F2F592F2F2F592F5A2F27F89FC7CC%C7C7C7CCC7C7C7CC26F874CCC7C7C7CCC7C7C7CCC7C7C7CCC7C7C7CCC7CC%9E27F82627FD1EFFA827F8F826C7A4C7A4C7A4C7A4C7C650F82784858485%5A615A5A365A355A2F5A355A365A5A6000F874CCA4C7A4C7A4C7A4C7A426%F87AC6C7A4C7A4C7A4C7A4C7A4C7A4C7A4C7A4CC7A26F820F8A8FD1FFF7D%F8F8F874CCC7CCC7C7C7CCC7CC74F8F884858B858560855A615A855A855A%855A615A855A27F87BC7C7C7CCC7C7C7CCC7CC26F874CCC7CCC7C7C7CCC7%C7C7CCC7C7C7CCC7CC7427F826F8A8FD21FF27F8F8F87ACCA4C7A4C7A4C7%C6A5F8F82E8B8585848584855A605A605A5A5A605A5A5A6005F850CCA4C7%A4C7A4C7A4C7C626F87BC6C7A4C7A4C7A4C7A4C7A4C7A4C7C6A54AF8F820%F8A8FD23FFF8F8F826A5CCC7C7C7CCC7CCC751F8272E7D848B85AF858B84%8B85858485848584858528F87BC7C7C7CCC7C7C7CCC7C7F8F87ACCC7CCC7%C7C7CCC7C7C7CCC7CCC77B2627F82727A8FD24FF7DF8F8F826A4CCA4C7A4%C7A4CC50F8F820F827275259848485858B858584858485848505F874CCA4%C7A4C7A4C7A4CC9EF8F8A5C6C7A4C7A4C7A4C7C6C7C6C77427F827F826F8%A8FD26FF7DF8F8F850C7CCC7C7C7CCC79FF8F8F820F827F827F82E2E5959%84848585AF85AF8527F89FC7CCC7C7C7CCC7C7C77BF826C7CCC7C7C7CCC7%CCC7CCA57B2627F8272027F827FD28FF52F8F8F84AA4CCA4C7A4CC7AF8F8%272727F8F8F820F820F820F827272E2E535359F8F87AC7A4C7A4C7A4C7A4%CC26F84ACCA4C7C6CCC6C79E7B2627F8F8F84B7426F8F852FD29FF52F8F8%F84BA5CCC7CCC79FF8F827FFCAA852522027F820F827F826F826F826F821%F89FC7CCC7C7C7CCC7CCA527F87BC7C79FA574752627F827F827269FC175%F827F8A8FD2AFF52F8F8F82674C7C6CC50F8F852FD06FF7D7D524B2027FD%05F820F8F874CCA4C7A4C7A4C7C774F8F82627F827F8F8F827F826F8214A%C19EC12020F852FD2CFF52FD04F8267B5026F8F852FD0BFFA8A87D7D527D%27F8F851C7C7C7CCC7C7C7A5F8F8F827F827F827F820F827202720C1C1C1%4A2720207DFD2DFF7DFD09F8A8FD11FFA8F8F8F8A5C6C7C6CCC67BF8F8F8%20F827F82727525227F827F8759EC19826F8F827FD2FFFA85127F8F8F827%F8A8FD13FF27F8F8267B7A9F7451F8F8F8277DFFA8FD04FF7DF827F851C0%C1C151F827F8A8FD31FF5226F826F827277DA8FD11FF7DFD0AF8267DFD06%FF7DF826F84B9EC19E75F827F852FD31FF5227F827F827F827F8277DFD11%FF7D20FD07F852A8FD06FF7DF827F82798C1C19F2027F827A8FD30FF52F8%F820F827F8F8F827F8F827FD11FFA8522727275252A8FD07FF76F820F827%74C198C126F8F8F87DFD30FFA82720272675989F744BF827F82027FD1EFF%52F827F82774C19EC14A27F82052FD31FF52F827209FC0C19EC19E9920F8%F8F827FD1BFFA827F827F82674C19EC16E27F8F827FD32FF2726F875C1C1%9EC19FC1C0C12627F82052FD19FF7D27F827F82798C19EC17427F82720A8%FD31FFA827F8F874C198C198C1989F98C120F8F8F87DFD16FFA827F8F827%F82698C198C17427F820F8A8FD33FF2727F89FC1C19EC19FC19EC1C19F20%27F827FD14FFA87D2020F827F8759EC19FC17427F827F8A1FD33FFA827F8%F84AC19EC198C19EC198C1C075F827F852A8FD10FFCA5227F827F8F8F875%C0C198C17420F827F87DFD35FF5220F82798C19FC19EC19FC19EC1C04BF8%27F827A1FD0DFF7D52F820F827F8274A9FC0C1C1C14A27F827F87DFD36FF%A8F826F84A98C198C198C198C198C19826F827F8F8277DA8FFA8FFFFFFA8%A87D52F8F8F820F800F84A74C19EC19EC14AF8F820F87DFD38FF7CF827F8%75C1C19EC19FC19EC19FC19E4BF827F827F82727524B5227272020F82720%27F8274A9FC0C19FC1C09F2627F827F8A8FD39FFA827F827F8759EC198C1%9EC198C19EC1987520F8F827F820F820F820F827F8F8F827205174C19EC1%98C19E75F827F8F8F8A8FD3BFFA827F827F8519EC19EC19FC19EC19FC1C0%C1744BF827F800F827F827F827267574C1C1C19EC1C1C1744BF827F82027%FD3EFF7D20F826F82774C198C198C198C198C198C1989F74754A754A7574%9998C19EC198C198C19E9F4A20F827F8F852FD40FFA827F827F8274AC1C1%C19EC19FC19EC19FC19EC1C1C1C0C1C1C1C0C19FC19EC1C1C198752627F8%27F84BA8FD42FFA827F827F8F820759EC19EC19EC198C19EC198C19EC198%C19EC198C19EC19E9F4A26F827F8F8F87DFD46FF7DF8262027F84B749F9E%C1C1C19EC19FC19EC19FC19EC1C1C1C0C1744BF827F827F82752FD49FFA8%27F8F820F800F84A6E9F98C19EC19EC198C19EC1989F744A2021F820F8F8%F8527DFD4CFF7D4BF8272027F827204B4A757499749F74754A4B2027F827%2027F82752A8FD50FFA12727F8F8F827F8F8F827F820F827F8F8F827F820%F820277DA8FD54FFA87D2727F820F827F827F827F827F820F827277D7DFD%5AFFA87D52522727F827F820F851527DA8FD3AFFFF%%EndData%%EndComments%%BeginProlog%%BeginResource: procset Adobe_level2_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)
%%Version: 1.2 0
%%CreationDate: (04/10/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_level2_AI5 26 dict dup begin
	put
	/packedarray where not
	{
		userdict begin
		/packedarray
		{
			array astore readonly
		} bind def
		/setpacking /pop load def
		/currentpacking false def
	 end
		0
	} if
	pop
	userdict /defaultpacking currentpacking put true setpacking
	/initialize
	{
		Adobe_level2_AI5 begin
	} bind def
	/terminate
	{
		currentdict Adobe_level2_AI5 eq
		{
		 end
		} if
	} bind def
	mark
	/setcustomcolor where not
	{
		/findcmykcustomcolor
		{
			(AI8_CMYK_CustomColor)
			6 packedarray
		} bind def
		/findrgbcustomcolor
		{
			(AI8_RGB_CustomColor)
			5 packedarray
		} bind def
		/setcustomcolor
		{
			exch 
			aload pop dup
			(AI8_CMYK_CustomColor) eq
			{
				pop pop
				4
				{
					4 index mul
					4 1 roll
				} repeat
				5 -1 roll pop
				setcmykcolor
			}
			{
				dup (AI8_RGB_CustomColor) eq
				{
					pop pop
					3
					{
						1 exch sub
						3 index mul 
						1 exch sub
						3 1 roll
					} repeat
					4 -1 roll pop
					setrgbcolor
				}
				{
					pop
					4
					{
						4 index mul 4 1 roll
					} repeat
					5 -1 roll pop
					setcmykcolor
				} ifelse
			} ifelse
		}
		def
	} if
	/setAIseparationgray
	{
		false setoverprint
		0 setgray
		/setseparationgray where{
			pop setseparationgray
		}{
			/setcolorspace where{
				pop
				[/Separation (All) /DeviceCMYK {dup dup dup}] setcolorspace
				1 exch sub setcolor
			}{
				setgray
			}ifelse
		}ifelse
	} def
	
	/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def
	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put
	userdict /level2?
	systemdict /languagelevel known dup
	{
		pop systemdict /languagelevel get 2 ge
	} if
	put
/level2ScreenFreq
{
 begin
		60
		HalftoneType 1 eq
		{
			pop Frequency
		} if
		HalftoneType 2 eq
		{
			pop GrayFrequency
		} if
		HalftoneType 5 eq
		{
			pop Default level2ScreenFreq
		} if
 end
} bind def
userdict /currentScreenFreq  
	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse put
level2? not
	{
		/setcmykcolor where not
		{
			/setcmykcolor
			{
				exch .11 mul add exch .59 mul add exch .3 mul add
				1 exch sub setgray
			} def
		} if
		/currentcmykcolor where not
		{
			/currentcmykcolor
			{
				0 0 0 1 currentgray sub
			} def
		} if
		/setoverprint where not
		{
			/setoverprint /pop load def
		} if
		/selectfont where not
		{
			/selectfont
			{
				exch findfont exch
				dup type /arraytype eq
				{
					makefont
				}
				{
					scalefont
				} ifelse
				setfont
			} bind def
		} if
		/cshow where not
		{
			/cshow
			{
				[
				0 0 5 -1 roll aload pop
				] cvx bind forall
			} bind def
		} if
	} if
	cleartomark
	/anyColor?
	{
		add add add 0 ne
	} bind def
	/testColor
	{
		gsave
		setcmykcolor currentcmykcolor
		grestore
	} bind def
	/testCMYKColorThrough
	{
		testColor anyColor?
	} bind def
	userdict /composite?
	1 0 0 0 testCMYKColorThrough
	0 1 0 0 testCMYKColorThrough
	0 0 1 0 testCMYKColorThrough
	0 0 0 1 testCMYKColorThrough
	and and and
	put
	composite? not
	{
		userdict begin
		gsave
		/cyan? 1 0 0 0 testCMYKColorThrough def
		/magenta? 0 1 0 0 testCMYKColorThrough def
		/yellow? 0 0 1 0 testCMYKColorThrough def
		/black? 0 0 0 1 testCMYKColorThrough def
		grestore
		/isCMYKSep? cyan? magenta? yellow? black? or or or def
		/customColor? isCMYKSep? not def
	 end
	} if
 end defaultpacking setpacking
%%EndResource
%%BeginProcSet: Adobe_ColorImage_AI6 1.3 0
userdict /Adobe_ColorImage_AI6 known not
{
	userdict /Adobe_ColorImage_AI6 53 dict put 
} if
userdict /Adobe_ColorImage_AI6 get begin
/initialize { 
	Adobe_ColorImage_AI6 begin
	Adobe_ColorImage_AI6 {
		dup type /arraytype eq {
			dup xcheck {
				bind
			} if
		} if
		pop pop
	} forall
} def
/terminate { end } def
currentdict /Adobe_ColorImage_AI6_Vars known not {
	/Adobe_ColorImage_AI6_Vars 41 dict def
} if
Adobe_ColorImage_AI6_Vars begin
	/plateindex -1 def
	/_newproc null def
	/_proc1 null def
	/_proc2 null def
	/sourcearray 4 array def
	/_ptispace null def
	/_ptiname null def
	/_pti0 0 def
	/_pti1 0 def
	/_ptiproc null def
	/_ptiscale 0 def
	/_pticomps 0 def
	/_ptibuf 0 string def
	/_gtigray 0 def
	/_cticmyk null def
	/_rtirgb null def
	/XIEnable true def
	/XIType 0 def
	/XIEncoding 0 def
	/XICompression 0 def
	/XIChannelCount 0 def
	/XIBitsPerPixel 0 def
	/XIImageHeight 0 def
	/XIImageWidth 0 def
	/XIImageMatrix null def
	/XIRowBytes 0 def
	/XIFile null def
	/XIBuffer1 null def
	/XIBuffer2 null def
	/XIBuffer3 null def
	/XIDataProc null def
	/XIColorSpace /DeviceGray def
	/XIColorValues 0 def
	/XIPlateList false def
end
/ci6colorimage /colorimage where {/colorimage get}{null} ifelse def
/ci6image systemdict /image get def
/ci6curtransfer systemdict /currenttransfer get def
/ci6curoverprint /currentoverprint where {/currentoverprint get}{{_of}} ifelse def
/ci6foureq {
	4 index ne {
		pop pop pop false
	}{
		4 index ne {
			pop pop false
		}{
			4 index ne {
				pop false
			}{
				4 index eq
			} ifelse
		} ifelse
	} ifelse
} def
/ci6testplate {
	Adobe_ColorImage_AI6_Vars begin
		/plateindex -1 def
		/setcmykcolor where {
			pop
			gsave
			1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
			grestore
			1 0 0 0 ci6foureq { 
				/plateindex 0 def
			}{
				0 1 0 0 ci6foureq { 
					/plateindex 1 def
				}{
					0 0 1 0 ci6foureq {
						/plateindex 2 def
					}{
						0 0 0 1 ci6foureq { 
							/plateindex 3 def
						}{
							0 0 0 0 ci6foureq {
								/plateindex 5 def
							} if
						} ifelse
					} ifelse
				} ifelse
			} ifelse
			pop pop pop pop
		} if
		plateindex
 end
} def
/ci6concatprocs {
	/packedarray where {
		pop dup type /packedarraytype eq 2 index type
		/packedarraytype eq or
	}{
		false
	} ifelse
	{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		_proc1 aload pop
		_proc2 aload pop
		_proc1 length
		_proc2 length add
		packedarray cvx
	}{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		/_newproc _proc1 length _proc2 length add array def
		_newproc 0 _proc1 putinterval
		_newproc _proc1 length _proc2 putinterval
		_newproc cvx
	} ifelse
} def
/ci6istint {
	type /arraytype eq 
} def
/ci6isspot {
	dup type /arraytype eq {
		dup length 1 sub get /Separation eq
	}{
		pop false
	} ifelse
} def
/ci6spotname {
	dup ci6isspot {dup length 2 sub get}{pop ()} ifelse
} def
/ci6altspace {
	aload pop pop pop ci6colormake
} def
/ci6numcomps {
	dup /DeviceGray eq {
		pop 1
	}{
		dup /DeviceRGB eq {
			pop 3
		}{
			/DeviceCMYK eq {
				4
			}{
				1
			} ifelse
		} ifelse
	} ifelse
} def
/ci6marksplate {
	dup /DeviceGray eq {
		pop plateindex 3 eq
	}{
		dup /DeviceRGB eq {
			pop plateindex 5 ne
		}{
			dup /DeviceCMYK eq {
				pop plateindex 5 ne
			}{
				dup ci6isspot {
					/findcmykcustomcolor where {
						pop
						dup length 2 sub get
						0.1 0.1 0.1 0.1 5 -1 roll
						findcmykcustomcolor 1 setcustomcolor
						systemdict /currentgray get exec
						1 ne
					}{
						pop plateindex 5 ne
					} ifelse
				}{
					pop plateindex 5 ne
				} ifelse
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colormake {
	dup ci6numcomps
	exch 1 index 2 add 1 roll
	dup 1 eq {pop}{array astore} ifelse
	exch
} def
/ci6colorexpand {
	dup ci6spotname exch
	dup ci6istint {
		ci6altspace
		exch 4 1 roll
	}{
		1 3 1 roll
	} ifelse
} def
/ci6colortint {
	dup /DeviceGray eq {
		3 1 roll 1 exch sub mul 1 exch sub exch
	}{
		dup /DeviceRGB eq {
			3 1 roll {1 exch sub 1 index mul 1 exch sub exch} forall pop 3 array astore exch
		}{
			dup /DeviceCMYK eq {
				3 1 roll {1 index mul exch} forall pop 4 array astore exch
			}{
				3 1 roll mul exch
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colortocmyk {
	dup /DeviceGray eq {
		pop 1 exch sub 0 0 0 4 -1 roll 4 array astore
	}{
		dup /DeviceRGB eq {
			pop aload pop _rgbtocmyk 4 array astore
		}{
			dup /DeviceCMYK eq {
				pop
			}{
				ci6altspace ci6colortint ci6colortocmyk
			} ifelse
		} ifelse
	} ifelse
} def
/ci6makeimagedict {
	7 dict begin
		/ImageType 1 def
		/Decode exch def
		/DataSource exch def
		/ImageMatrix exch def
		/BitsPerComponent exch def
		/Height exch def
		/Width exch def
	currentdict end
} def
/ci6stringinvert {
	0 1 2 index length 1 sub {
		dup 2 index exch get 255 exch sub 2 index 3 1 roll put
	} for
} def
/ci6stringknockout {
	0 1 2 index length 1 sub {
		255 2 index 3 1 roll put
	} for
} def
/ci6stringapply {
	0 1 4 index length 1 sub {
		dup
		4 index exch get
		3 index 3 1 roll
		3 index exec
	} for
	pop exch pop
} def
/ci6walkrgbstring {
	0 3 index
	dup length 1 sub 0 3 3 -1 roll {
		3 getinterval {} forall
		5 index exec
		3 index
	} for
	
	 5 {pop} repeat
} def
/ci6walkcmykstring
{
	0 3 index
	dup length 1 sub 0 4 3 -1 roll {
		4 getinterval {} forall
		
		6 index exec
		
		3 index
		
	} for
	
	5 { pop } repeat
	
} def
/ci6putrgbtograystr
{
	.11 mul exch
	
	.59 mul add exch
	
	.3 mul add
	
	cvi 3 copy put
	
	pop 1 add
} def
/ci6putcmyktograystr
{
	exch .11 mul add
	
	exch .59 mul add
	
	exch .3 mul add
	
	dup 255 gt { pop 255 } if
	
	255 exch sub cvi 3 copy put
	
	pop 1 add
} def
/ci6rgbtograyproc {	
	Adobe_ColorImage_AI6_Vars begin 
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putrgbtograystr load exch
		ci6walkrgbstring
 end
} def
/ci6cmyktograyproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putcmyktograystr load exch
		ci6walkcmykstring
 end
} def
/ci6separatecmykproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		
		XIBuffer3
		
		0 2 index
		
		plateindex 4 2 index length 1 sub {
			get 255 exch sub
			
			3 copy put pop 1 add
			
			2 index
		} for
		pop pop exch pop
 end
} def
	
/ci6compositeimage {
	dup 1 eq {
		pop pop image
	}{
		/ci6colorimage load null ne {
			ci6colorimage
		}{
			3 1 roll pop
			sourcearray 0 3 -1 roll put
			3 eq {/ci6rgbtograyproc}{/ci6cmyktograyproc} ifelse load
			image
		} ifelse
	} ifelse
} def
/ci6knockoutimage {
	gsave
	0 ci6curtransfer exec 1 ci6curtransfer exec
	eq {
		0 ci6curtransfer exec 0.5 lt
	}{
		0 ci6curtransfer exec 1 ci6curtransfer exec gt
	} ifelse
	{{pop 0}}{{pop 1}} ifelse
	systemdict /settransfer get exec
	ci6compositeimage
	grestore
} def
/ci6drawimage {
	ci6testplate -1 eq {
		pop ci6compositeimage
	}{
		dup type /arraytype eq {
			dup length plateindex gt {plateindex get}{pop false} ifelse
		}{
			{
				true
			}{
				dup 1 eq {plateindex 3 eq}{plateindex 3 le} ifelse
			} ifelse
		} ifelse
		{
			dup 1 eq {
				pop pop ci6image
			}{
				dup 3 eq {
					ci6compositeimage
				}{
					pop pop
					sourcearray 0 3 -1 roll put
					/ci6separatecmykproc load
					ci6image
				} ifelse
			} ifelse
		}{
			ci6curoverprint {
				7 {pop} repeat
			}{
				ci6knockoutimage
			} ifelse
		} ifelse
	} ifelse
} def
/ci6proctintimage {
	/_ptispace exch store /_ptiname exch store /_pti1 exch store /_pti0 exch store /_ptiproc exch store
	/_pticomps _ptispace ci6numcomps store
	/_ptiscale _pti1 _pti0 sub store
	level2? {
		_ptiname length 0 gt version cvr 2012 ge and {
			[/Separation _ptiname _ptispace {_ptiproc}] setcolorspace
			[_pti0 _pti1] ci6makeimagedict ci6image
		}{
			[/Indexed _ptispace 255 {255 div _ptiscale mul _pti0 add _ptiproc}] setcolorspace
			[0 255] ci6makeimagedict ci6image
		} ifelse
	}{
		_pticomps 1 eq {
			{
				dup
				{
					255 div _ptiscale mul _pti0 add _ptiproc 255 mul cvi put
				} ci6stringapply
			} ci6concatprocs ci6image
		}{
			{
				dup length _pticomps mul dup _ptibuf length ne {/_ptibuf exch string store}{pop} ifelse
				_ptibuf {
					exch _pticomps mul exch 255 div _ptiscale mul _pti0 add _ptiproc
					_pticomps 2 add -2 roll
					_pticomps 1 sub -1 0 {
						1 index add 2 index exch
						5 -1 roll
						255 mul cvi put
					} for
					pop pop
				} ci6stringapply
			} ci6concatprocs false _pticomps
			/ci6colorimage load null eq {7 {pop} repeat}{ci6colorimage} ifelse
		} ifelse
	} ifelse
} def
/ci6graytintimage {
	/_gtigray 5 -1 roll store
	{1 _gtigray sub mul 1 exch sub} 4 1 roll
	/DeviceGray ci6proctintimage
} def
/ci6cmyktintimage {
	/_cticmyk 5 -1 roll store
	{_cticmyk {1 index mul exch} forall pop} 4 1 roll
	/DeviceCMYK ci6proctintimage
} def
/ci6rgbtintimage {
	/_rtirgb 5 -1 roll store
	{_rtirgb {1 exch sub 1 index mul 1 exch sub exch} forall pop} 4 1 roll
	/DeviceRGB ci6proctintimage
} def
/ci6tintimage {
	ci6testplate -1 eq {
		ci6colorexpand
		3 -1 roll 5 -1 roll {0}{0 exch} ifelse 4 2 roll
		dup /DeviceGray eq {
			pop ci6graytintimage
		}{
			dup /DeviceRGB eq {
				pop ci6rgbtintimage
			}{
				pop ci6cmyktintimage
			} ifelse
		} ifelse
	}{
		dup ci6marksplate {
			plateindex 5 lt {
				ci6colortocmyk plateindex get
				dup 0 eq ci6curoverprint and {
					7 {pop} repeat
				}{
					1 exch sub
					exch {1 0}{0 1} ifelse () ci6graytintimage
				} ifelse
			}{
				pop exch {0}{0 exch} ifelse 0 3 1 roll () ci6graytintimage
			} ifelse
		}{
			ci6curoverprint {
				8 {pop} repeat
			}{
				pop pop pop
				{pop 1} 0 1 () /DeviceGray ci6proctintimage
			} ifelse
		} ifelse
	} ifelse
} def
/XINullImage {
} def
/XIImageMask {
	XIImageWidth XIImageHeight false
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	imagemask
} def
/XIImageTint {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	XIType 3 eq XIColorValues XIColorSpace ci6tintimage
} def
/XIImage {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	false XIChannelCount XIPlateList ci6drawimage
} def
/XG {
	pop pop
} def
/XF {
	13 {pop} repeat
} def
/Xh {
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		/XIImageMatrix exch def
		0 0 moveto
		XIImageMatrix concat
		XIImageWidth XIImageHeight scale
		
		/_lp /null ddef
		_fc
		/_lp /imagemask ddef
 end
} def
/XH {
	Adobe_ColorImage_AI6_Vars begin
		grestore
 end
} def
/XIEnable {
	Adobe_ColorImage_AI6_Vars /XIEnable 3 -1 roll put
} def
/XC {
	Adobe_ColorImage_AI6_Vars begin
		ci6colormake
		/XIColorSpace exch def
		/XIColorValues exch def
 end
} def
/XIPlates {
	Adobe_ColorImage_AI6_Vars begin
		/XIPlateList exch def
 end
} def
/XI
{
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		cvi dup
		256 idiv /XICompression exch store
		256 mod /XIEncoding exch store
		pop pop
		/XIChannelCount exch def
		/XIBitsPerPixel exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		pop pop pop pop
		/XIImageMatrix exch def
		XIBitsPerPixel 1 eq {
			XIImageWidth 8 div ceiling cvi
		}{
			XIImageWidth XIChannelCount mul
		} ifelse
		/XIRowBytes exch def
		XIEnable {
			/XIBuffer3 XIImageWidth string def
			XICompression 0 eq {
				/XIBuffer1 XIRowBytes string def
				XIEncoding 0 eq {
					{currentfile XIBuffer1 readhexstring pop}
				}{
					{currentfile XIBuffer1 readstring pop}
				} ifelse
			}{
				/XIBuffer1 256 string def
				/XIBuffer2 XIRowBytes string def
				{currentfile XIBuffer1 readline pop (%) anchorsearch {pop} if}
				/ASCII85Decode filter /DCTDecode filter
				/XIFile exch def
				{XIFile XIBuffer2 readstring pop}
			} ifelse
			/XIDataProc exch def
			
			XIType 1 ne {
				0 setgray
			} if
			XIType 1 eq {
				XIImageMask
			}{
				XIType 2 eq XIType 3 eq or {
					XIImageTint
				}{
					XIImage
				} ifelse
			} ifelse
		}{
			XINullImage
		} ifelse
		/XIPlateList false def
		grestore
 end
} def
end
%%EndProcSet
%%BeginResource: procset Adobe_Illustrator_AI5 1.3 0
%%Title: (Adobe Illustrator (R) Version 8.0 Full Prolog)
%%Version: 1.3 0
%%CreationDate: (3/7/1994) ()
%%Copyright: ((C) 1987-1998 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5_vars 112 dict dup begin
put
/_?cmyk false def
/_eo false def
/_lp /none def
/_pf
{
} def
/_ps
{
} def
/_psf
{
} def
/_pss
{
} def
/_pjsf
{
} def
/_pjss
{
} def
/_pola 0 def
/_doClip 0 def
/cf currentflat def
/_lineorientation 0 def
/_charorientation 0 def
/_yokoorientation 0 def
/_tm matrix def
/_renderStart
[
/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0
] def
/_renderEnd
[
null null null null /i1 /i1 /i1 /i1
] def
/_render -1 def
/_shift [0 0] def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading
[
0 0
] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fontSize 0 def
/_fontAscent 0 def
/_fontDescent 0 def
/_fontHeight 0 def
/_fontRotateAdjust 0 def
/Ss 256 string def
Ss 0 (fonts/) putinterval
/_cnt 0 def
/_scale [1 1] def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_hfname 100 string def
/_hffound false def
/Tx
{
} def
/Tj
{
} def
/CRender
{
} def
/_AI3_savepage
{
} def
/_gf null def
/_cf 4 array def
/_rgbf 3 array def
/_if null def
/_of false def
/_fc
{
} def
/_gs null def
/_cs 4 array def
/_rgbs 3 array def
/_is null def
/_os false def
/_sc
{
} def
/_pd 1 dict def
/_ed 15 dict def
/_pm matrix def
/_fm null def
/_fd null def
/_fdd null def
/_sm null def
/_sd null def
/_sdd null def
/_i null def
/_lobyte 0 def
/_hibyte 0 def
/_cproc null def
/_cscript 0 def
/_hvax 0 def
/_hvay 0 def
/_hvwb 0 def
/_hvcx 0 def
/_hvcy 0 def
/_bitfont null def
/_bitlobyte 0 def
/_bithibyte 0 def
/_bitkey null def
/_bitdata null def
/_bitindex 0 def
/discardSave null def
/buffer 256 string def
/beginString null def
/endString null def
/endStringLength null def
/layerCnt 1 def
/layerCount 1 def
/perCent (%) 0 get def
/perCentSeen? false def
/newBuff null def
/newBuffButFirst null def
/newBuffLast null def
/clipForward? false def
end
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 100 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/initialize
{
	Adobe_Illustrator_AI5 dup begin
	Adobe_Illustrator_AI5_vars begin
	/_aicmykps where {pop /_?cmyk _aicmykps def}if
	discardDict
	{
		bind pop pop
	} forall
	dup /nc get begin
	{
		dup xcheck 1 index type /operatortype ne and
		{
			bind
		} if
		pop pop
	} forall
 end
	newpath
} def
/terminate
{
 end
 end
} def
/_
null def
/ddef
{
	Adobe_Illustrator_AI5_vars 3 1 roll put
} def
/xput
{
	dup load dup length exch maxlength eq
	{
		dup dup load dup
		length 2 mul dict copy def
	} if
	load begin
	def
 end
} def
/npop
{
	{
		pop
	} repeat
} def
/hswj
{
	dup stringwidth 3 2 roll
	{
		_hvwb eq { exch _hvcx add exch _hvcy add } if
		exch _hvax add exch _hvay add
	} cforall
} def
/vswj
{
	0 0 3 -1 roll
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			dup cstring stringwidth 5 2 roll
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			4 -1 roll sub exch
			3 -1 roll sub exch
		}
		{
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			_fontHeight sub
		} ifelse
	} cforall
} def
/swj
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hswj } { vswj } ifelse
} def
/sw
{
	0 0 0 6 3 roll swj
} def
/vjss
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index setmatrix stroke
			grestore
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			gsave
			2 index false charpath
			6 index setmatrix stroke
			grestore
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjss
{
	4 1 roll
	{
		dup cstring
		gsave
		false charpath currentpoint
		5 index setmatrix stroke
		grestore
		moveto
		_sp eq
		{
			5 index 5 index rmoveto
		} if
		2 copy rmoveto
	} cforall
	6 npop
} def
/jss
{
	_lineorientation 0 eq { hjss } { vjss } ifelse
} def
/ss
{
	0 0 0 7 3 roll jss
} def
/vjsp
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			false charpath
            currentpoint
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			2 index false charpath
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjsp
{
    4 1 roll
    {
        dup cstring
        false charpath
        _sp eq
        {
            5 index 5 index rmoveto
        } if
        2 copy rmoveto
    } cforall
    6 npop
} def
/jsp
{
	matrix currentmatrix
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/sp
{
    matrix currentmatrix
    0 0 0 7 3 roll
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/pl
{
	transform
	0.25 sub round 0.25 add exch
	0.25 sub round 0.25 add exch
	itransform
} def
/setstrokeadjust where
{
	pop true setstrokeadjust
	/c
	{
		curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y
	{
		2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		lineto
	} def
	/L
	/l load def
	/m
	{
		moveto
	} def
}
{
	/c
	{
		pl curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
		pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		pl lineto
	} def
	/L
	/l load def
	/m
	{
		pl moveto
	} def
} ifelse
/d
{
	setdash
} def
/cf
{
} def
/i
{
	dup 0 eq
	{
		pop cf
	} if
	setflat
} def
/j
{
	setlinejoin
} def
/J
{
	setlinecap
} def
/M
{
	setmiterlimit
} def
/w
{
	setlinewidth
} def
/XR
{
	0 ne
	/_eo exch ddef
} def
/H
{
} def
/h
{
	closepath
} def
/N
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			_eo {eoclip} {clip} ifelse /_doClip 0 ddef
		} if
		newpath
	}
	{
		/CRender
		{
			N
		} ddef
	} ifelse
} def
/n
{
	N
} def
/F
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc
			/_doClip 0 ddef
		}
		{
			_pf
		} ifelse
	}
	{
		/CRender
		{
			F
		} ddef
	} ifelse
} def
/f
{
	closepath
	F
} def
/S
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			_ps
		} ifelse
	}
	{
		/CRender
		{
			S
		} ddef
	} ifelse
} def
/s
{
	closepath
	S
} def
/B
{
	_pola 0 eq
	{
		_doClip 1 eq
		gsave F grestore
		{
			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			S
		} ifelse
	}
	{
		/CRender
		{
			B
		} ddef
	} ifelse
} def
/b
{
	closepath
	B
} def
/W
{
	/_doClip 1 ddef
} def
/*
{
	count 0 ne
	{
		dup type /stringtype eq
		{
			pop
		} if
	} if
	newpath
} def
/u
{
} def
/U
{
} def
/q
{
	_pola 0 eq
	{
		gsave
	} if
} def
/Q
{
	_pola 0 eq
	{
		grestore
	} if
} def
/*u
{
	_pola 1 add /_pola exch ddef
} def
/*U
{
	_pola 1 sub /_pola exch ddef
	_pola 0 eq
	{
		CRender
	} if
} def
/D
{
	pop
} def
/*w
{
} def
/*W
{
} def
/`
{
	/_i save ddef
	clipForward?
	{
		nulldevice
	} if
	6 1 roll 4 npop
	concat pop
	userdict begin
	/showpage
	{
	} def
	0 setgray
	0 setlinecap
	1 setlinewidth
	0 setlinejoin
	10 setmiterlimit
	[] 0 setdash
	/setstrokeadjust where {pop false setstrokeadjust} if
	newpath
	0 setgray
	false setoverprint
} def
/~
{
 end
	_i restore
} def
/_rgbtocmyk
{
	3
	{
		1 exch sub 3 1 roll
	} repeat
	3 copy 1 4 1 roll
	3
	{
		3 index 2 copy gt
		{
			exch
		} if
		pop 4 1 roll
	} repeat
	pop pop pop
	4 1 roll
	3
	{
		3 index sub
		3 1 roll
	} repeat
	4 -1 roll
} def
/setrgbfill
{
	_rgbf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_rgbf aload pop setrgbcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/setrgbstroke
{
	_rgbs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_rgbs aload pop setrgbcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/O
{
	0 ne
	/_of exch ddef
	/_lp /none ddef
} def
/R
{
	0 ne
	/_os exch ddef
	/_lp /none ddef
} def
/g
{
	/_gf exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/G
{
	/_gs exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/k
{
	_cf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_cf aload pop setcmykcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/K
{
	_cs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_cs aload pop setcmykcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xa
{
	_?cmyk {
		3 npop k
	}{
		setrgbfill 4 npop
	} ifelse
} def
/XA
{
	_?cmyk {
		3 npop K
	}{
		setrgbstroke 4 npop
	} ifelse
} def
/Xs
{
	/_gf exch ddef
	5 npop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setAIseparationgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XS
{
	/_gs exch ddef
	5 npop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setAIseparationgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xx
{
	exch
	/_gf exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XX
{
	exch
	/_gs exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/x
{
	/_gf exch ddef
	findcmykcustomcolor
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/X
{
	/_gs exch ddef
	findcmykcustomcolor
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/XK
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		K
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		XA
	} ifelse
} def
/Xk
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		k
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		Xa
	} ifelse
} def
/A
{
	pop
} def
/annotatepage
{
userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse
} def
/XT {
	pop pop
} def
/Xt {
	pop
} def
/discard
{
	save /discardSave exch store
	discardDict begin
	/endString exch store
	gt38?
	{
		2 add
	} if
	load
	stopped
	pop
 end
	discardSave restore
} bind def
userdict /discardDict 7 dict dup begin
put
/pre38Initialize
{
	/endStringLength endString length store
	/newBuff buffer 0 endStringLength getinterval store
	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store
	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store
} def
/shiftBuffer
{
	newBuff 0 newBuffButFirst putinterval
	newBuffLast 0
	currentfile read not
	{
	stop
	} if
	put
} def
0
{
	pre38Initialize
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff endString eq
			{
				cleartomark stop
			} if
			shiftBuffer
		} loop
	}
	{
	stop
	} ifelse
} def
1
{
	pre38Initialize
	/beginString exch store
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff beginString eq
			{
				/layerCount dup load 1 add store
			}
			{
				newBuff endString eq
				{
					/layerCount dup load 1 sub store
					layerCount 0 eq
					{
						cleartomark stop
					} if
				} if
			} ifelse
			shiftBuffer
		} loop
	} if
} def
2
{
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			endString eq {
				cleartomark stop
			} if
		}ifelse
	} loop
} def
3
{
	/beginString exch store
	/layerCnt 1 store
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			dup beginString eq
			{
				pop /layerCnt dup load 1 add store
			}
			{
				endString eq
				{
					layerCnt 1 eq
					{
						cleartomark stop
					}
					{
						/layerCnt dup load 1 sub store
					} ifelse
				} if
			} ifelse
		}ifelse
	} loop
} def
end
userdict /clipRenderOff 15 dict dup begin
put
{
	/n /N /s /S /f /F /b /B
}
{
	{
		_doClip 1 eq
		{
			/_doClip 0 ddef _eo {eoclip} {clip} ifelse
		} if
		newpath
	} def
} forall
/Tr /pop load def
/Bb {} def
/BB /pop load def
/Bg {12 npop} def
/Bm {6 npop} def
/Bc /Bm load def
/Bh {4 npop} def
end
/Lb
{
	6 npop
	7 2 roll
	5 npop
	0 eq
	{
		0 eq
		{
			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard
		}
		{
			
			/clipForward? true def
			
			/Tx /pop load def
			/Tj /pop load def
			
			currentdict end clipRenderOff begin begin
		} ifelse
	}
	{
		0 eq
		{
			save /discardSave exch store
		} if
	} ifelse
} bind def
/LB
{
	discardSave dup null ne
	{
		restore
	}
	{
		pop
		clipForward?
		{
			currentdict
		 end
		 end
		 begin
					
			/clipForward? false ddef
		} if
	} ifelse
} bind def
/Pb
{
	pop pop
	0 (%AI5_EndPalette) discard
} bind def
/Np
{
	0 (%AI5_End_NonPrinting--) discard
} bind def
/Ln /pop load def
/Ap
/pop load def
/Ar
{
	72 exch div
	0 dtransform dup mul exch dup mul add sqrt
	dup 1 lt
	{
		pop 1
	} if
	setflat
} def
/Mb
{
	q
} def
/Md
{
} def
/MB
{
	Q
} def
/nc 4 dict def
nc begin
/setgray
{
	pop
} bind def
/setcmykcolor
{
	4 npop
} bind def
/setrgbcolor
{
	3 npop
} bind def
/setcustomcolor
{
	2 npop
} bind def
currentdict readonly pop
end
/XP
{
	4 npop
} bind def
/XD
{
	pop
} bind def
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_cshow 2.0 8
%%Title: (Writing System Operators)
%%Version: 2.0 8
%%CreationDate: (1/23/89) ()
%%Copyright: ((C) 1992-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_cshow 14 dict dup begin put
/initialize
{
	Adobe_cshow begin
	Adobe_cshow
	{
		dup xcheck
		{
			bind
		} if
		pop pop
	} forall
 end
	Adobe_cshow begin
} def
/terminate
{
currentdict Adobe_cshow eq
	{
 end
	} if
} def
/cforall
{
	/_lobyte 0 ddef
	/_hibyte 0 ddef
	/_cproc exch ddef
	/_cscript currentfont /FontScript known { currentfont /FontScript get } { -1 } ifelse ddef
	{
		/_lobyte exch ddef
		_hibyte 0 eq
		_cscript 1 eq
		_lobyte 129 ge _lobyte 159 le and
		_lobyte 224 ge _lobyte 252 le and or and
		_cscript 2 eq
		_lobyte 161 ge _lobyte 254 le and and
		_cscript 3 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript 25 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript -1 eq
		or or or or and
		{
			/_hibyte _lobyte ddef
		}
		{
			_hibyte 256 mul _lobyte add
			_cproc
			/_hibyte 0 ddef
		} ifelse
	} forall
} def
/cstring
{
	dup 256 lt
	{
		(s) dup 0 4 3 roll put
	}
	{
		dup 256 idiv exch 256 mod
		(hl) dup dup 0 6 5 roll put 1 4 3 roll put
	} ifelse
} def
/clength
{
	0 exch
	{ 256 lt { 1 } { 2 } ifelse add } cforall
} def
/hawidthshow
{
	{
		dup cstring
		show
		_hvax _hvay rmoveto
		_hvwb eq { _hvcx _hvcy rmoveto } if
	} cforall
} def
/vawidthshow
{
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			-90 rotate
			0 _fontRotateAdjust rmoveto
			cstring
			_hvcx _hvcy _hvwb _hvax _hvay 6 -1 roll awidthshow
			0 _fontRotateAdjust neg rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			exch _hvay sub exch _hvax sub
			2 index _hvwb eq { exch _hvcy sub exch _hvcx sub } if
			3 2 roll
			cstring
			dup stringwidth pop 2 div neg _fontAscent neg rmoveto
			show
			moveto
		} ifelse
	} cforall
} def
/hvawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hawidthshow } { vawidthshow } ifelse
} def
/hvwidthshow
{
	0 0 3 -1 roll hvawidthshow
} def
/hvashow
{
	0 0 0 6 -3 roll hvawidthshow
} def
/hvshow
{
	0 0 0 0 0 6 -1 roll hvawidthshow
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_shading_AI8 1.0 0
%%Title: (Adobe Illustrator 8 Shading Procset)
%%Version: 1.0 0
%%CreationDate: (12/17/97) ()
%%Copyright: ((C) 1987-1997 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /Adobe_shading_AI8 10 dict dup begin put
/initialize {
	Adobe_shading_AI8 begin
	Adobe_shading_AI8 bdprocs
	Mesh /initialize get exec
} def
/terminate {
	currentdict Adobe_shading_AI8 eq {
	 end
	} if
} def
/bdprocs {
	{
		dup xcheck 1 index type /arraytype eq and {
			bind
		} if
		pop pop
	} forall
} def
/X! {pop} def
/X# {pop pop} def
/Mesh 40 dict def
Mesh begin
/initialize {
	Mesh bdprocs
	Mesh begin
		/emulate? /AI8MeshEmulation where {
			pop AI8MeshEmulation
		}{
			systemdict /shfill known not
		} ifelse def
 end
} def
/bd {
	shadingdict begin
} def
/paint {
	emulate? {
	 end
	}{
		/_lp /none ddef _fc /_lp /none ddef
		
		/AIColorSpace AIColorSpace tocolorspace store
		/ColorSpace AIColorSpace topsspace store
		
		version_ge_3010.106 not systemdict /setsmoothness known and {
			0.0001 setsmoothness
		} if
		
		composite? {
			/DataSource getdatasrc def
			Matrix concat
			currentdict end
			shfill
		}{
			AIColorSpace makesmarks AIPlateList markingplate and not isoverprint and {
			 end
			}{
				/ColorSpace /DeviceGray store
				/Decode [0 1 0 1 0 1] store
				/DataSource getplatesrc def
				Matrix concat
				currentdict end
				shfill
			} ifelse
		} ifelse
	} ifelse
} def
/shadingdict 12 dict def
shadingdict begin
	/ShadingType 6 def
	/BitsPerCoordinate 16 def
	/BitsPerComponent 8 def
	/BitsPerFlag 8 def
end
/datafile null def
/databuf 256 string def
/dataptr 0 def
/srcspace null def
/srcchannels 0 def
/dstchannels 0 def
/dstplate 0 def
/srctodstcolor null def
/getplatesrc {
	/srcspace AIColorSpace store
	/srcchannels AIColorSpace getnchannels store
	/dstchannels 1 store
	/dstplate getplateindex store
	/srctodstcolor srcspace makesmarks {
		dstplate 4 eq {
			{1 exch sub}
		}{
			{srcspace tocmyk 3 dstplate sub index 1 exch sub 5 1 roll 4 {pop} repeat}
		} ifelse
	}{
		{srcchannels {pop} repeat 1}
	} ifelse store
	/datafile getdatasrc store
	/rdpatch168 load DataLength () /SubFileDecode filter
} def
/getdatasrc {
	/rdcmntline load /ASCII85Decode filter
} def
/rdpatch168 {
	/dataptr 0 store
	49 rdcount
	4 {
		dup {pop srcchannels getint8} if
		dup {pop srctodstcolor dstchannels putint8 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdpatch3216 {
	/dataptr 0 store
	97 rdcount
	4 {
		dup {pop srcchannels getint16} if
		dup {pop srctodstcolor dstchannels putint16 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdcount {
	dup 0 gt {
		datafile databuf dataptr 4 -1 roll getinterval readstring
		exch length dataptr add /dataptr exch store
	}{
		true
	} ifelse
} def
/getint8 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 255 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint8 {
	dup dataptr add /dataptr exch store
	dataptr exch
	{
		1 sub exch
		255 mul cvi
		databuf 2 index
		3 -1 roll put
	} repeat
	pop
} def 
/getint16 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 256 mul datafile read} if
		dup {pop add 65535 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint16 {
	dup 2 mul dataptr add /dataptr exch store
	dataptr exch
	{
		2 sub exch
		65535 mul cvi dup
		256 idiv databuf 3 index 3 -1 roll put
		256 mod databuf 2 index 1 add 3 -1 roll put
	} repeat
	pop
} def 
/srcbuf 256 string def
/rdcmntline {
	currentfile srcbuf readline pop
	(%) anchorsearch {pop} if
} def
/getplateindex {
	0 [cyan? magenta? yellow? black? customColor?] {{exit} if 1 add} forall
} def
/aicsarray 4 array def
/aicsaltvals 4 array def
/aicsaltcolr aicsaltvals def
/tocolorspace {
	dup type /arraytype eq {
		mark exch aload pop
		aicsarray 0 3 -1 roll put
		aicsarray 1 3 -1 roll put
		dup aicsarray 2 3 -1 roll put
		gettintxform aicsarray 3 3 -1 roll put
		counttomark aicsaltvals 0 3 -1 roll getinterval /aicsaltcolr exch store
		aicsaltcolr astore pop pop
		aicsarray
	} if
} def
/subtintxform {aicsaltcolr {1 index mul exch} forall pop} def
/addtintxform {aicsaltcolr {1 sub 1 index mul 1 add exch} forall pop} def
/gettintxform {
	/DeviceRGB eq {/addtintxform}{/subtintxform} ifelse load
} def
/getnchannels {
	dup type /arraytype eq {0 get} if
	colorspacedict exch get begin Channels end
} def
/makesmarks {
	composite? {
		pop true
	}{
		dup dup type /arraytype eq {0 get} if
		colorspacedict exch get begin MarksPlate end
	} ifelse
} def
/markingplate {
	composite? {
		pop true
	}{
		dup type /arraytype eq {
			dup length getplateindex gt {getplateindex get}{pop false} ifelse
		} if
	} ifelse
} def
/tocmyk {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToCMYK end
} def
/topsspace {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToPSSpace end
} def
/colorspacedict 5 dict dup begin
	/DeviceGray 4 dict dup begin
		/Channels 1 def
		/MarksPlate {pop black?} def
		/ToCMYK {pop 1 exch sub 0 0 0 4 -1 roll} def
		/ToPSSpace {} def
 end def
	/DeviceRGB 4 dict dup begin
		/Channels 3 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop _rgbtocmyk} def
		/ToPSSpace {} def
 end def
	/DeviceCMYK 4 dict dup begin
		/Channels 4 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop} def
		/ToPSSpace {} def
 end def
	/Separation 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			/findcmykcustomcolor where {
				pop dup 1 exch ToCMYK 5 -1 roll 1 get
				findcmykcustomcolor 1 setcustomcolor
				systemdict /currentgray get exec
				1 ne
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {} def
 end def
	/Process 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			isCMYKSep? {
				1 exch ToCMYK 4 array astore getplateindex get 0 ne 
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {
			4 array copy dup 0 /Separation put
		} def
 end def
end def
/isoverprint {
	/currentoverprint where {pop currentoverprint}{_of} ifelse
} def
/version_ge_3010.106 {
   version {cvr} stopped {
      pop
      false
   }{
      3010.106 ge
   } ifelse
} def
end
end
defaultpacking setpacking
%%EndResource
%%EndProlog%%BeginSetupuserdict /_useSmoothShade false putuserdict /_aicmykps false putuserdict /_forceToCMYK false putAdobe_level2_AI5 /initialize get exec
Adobe_cshow /initialize get exec
Adobe_ColorImage_AI6 /initialize get exec
Adobe_shading_AI8 /initialize get exec
Adobe_Illustrator_AI5 /initialize get exec
%AI5_Begin_NonPrintingNp%AI8_PluginGroupInfo(Adobe Flare Plugin) (Flare) (Flare.aip)%AI8_PluginGroupInfo(Adobe Deform Plugin) (Adobe \203G\203\223\203x\203\215\201[\203v\203v\203\211\203O\203C\203\223) (Envelope and Warp.aip)%AI8_PluginGroupInfo(Adobe Planar Group) (Adobe \203\211\203C\203u\203y\203C\203\223\203g\203v\203\211\203O\203C\203\223) (Live Paint.aip)%AI8_PluginGroupInfo(Adobe Perspective Plugin Group) (Adobe Perspective Plugin Group) (Perspective.aip)%AI8_PluginGroupInfo(Adobe Vectorized Object) (\203g\203\214\201[\203X\211\346\221\234) (Adobe Illustrator.app)%AI8_PluginGroupInfo(Adobe Path Blends) (Adobe \203u\203\214\203\223\203h\203v\203\211\203O\203C\203\223) (LiveBlends.aip)%AI8_PluginGroupInfo(Adobe Scatter Brush Tool) (Adobe \216U\225z\203u\203\211\203V\203v\203\211\203O\203C\203\223) (ScatterBrushTool.aip)%AI8_PluginGroupInfo(Adobe Scatter Brush Tool) (Adobe \216U\225z\203u\203\211\203V\203v\203\211\203O\203C\203\223) (ScatterBrushTool.aip)%AI8_PluginGroupInfo(Adobe PatternOnPath Brush Tool) (Adobe \203p\203^\201[\203\223\203u\203\211\203V\203v\203\211\203O\203C\203\223) (ArtBrushTool.aip)%AI8_PluginGroupInfo(Adobe PatternOnPath Brush Tool) (Adobe \203p\203^\201[\203\223\203u\203\211\203V\203v\203\211\203O\203C\203\223) (ArtBrushTool.aip)%AI8_PluginGroupInfo(Adobe ArtOnPath Brush Tool) (Adobe \203A\201[\203g\203u\203\211\203V\203v\203\211\203O\203C\203\223) (ArtBrushTool.aip)%AI8_PluginGroupInfo(Adobe ArtOnPath Brush Tool) (Adobe \203A\201[\203g\203u\203\211\203V\203v\203\211\203O\203C\203\223) (ArtBrushTool.aip)%AI8_PluginGroupInfo(Adobe Calligraphic Brush Tool) (Adobe \203J\203\212\203O\203\211\203t\203B\203u\203\211\203V\203v\203\211\203O\203C\203\223) (CalligBrushTool.aip)%AI8_PluginGroupInfo(Adobe Symbolism) (Adobe \203V\203\223\203{\203\213) (ParticleSystem.aip)%AI8_PluginGroupInfo(Adobe Pattern Editor Plugin Group) (Adobe Pattern Editor Plugin Group) (SwatchLibraries.aip)%AI8_PluginGroupInfo(Pathfinder Suite) (Adobe Compound Shape) (PathFinderS.aip)%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI5_End_NonPrinting--%AI5_BeginPalette0 0 Pb0.929717 0.879728 0.890196 0.799985 ([\603\614\603W\603X\603g\603\614\601[\603V\603\607\603\623]) 0 Xs([\603\614\603W\603X\603g\603\614\601[\603V\603\607\603\623])PcPB%AI5_EndPalette%%EndSetup%AI5_BeginLayer1 1 1 1 0 0 1 0 79 128 255 0 50 Lb(\203\214\203C\203\204\201[ 1) Ln0 A*u0 O0.783291 0.822354 0.825193 0.67126 0.137255 0.090196 0.082353 Xa0 J 0 j 1 w 10 M []0 d0 XR300.6279 323.959 m282.856 323.959 266.2827 332.8574 257.7422 341.6768 c252.8311 346.7471 250.314 351.8896 250.4629 356.5459 c250.6709 362.9365 253.8813 367.751 258.8789 369.7461 C258.541 369.8555 258.1992 369.9775 257.8535 370.1123 c244.2896 375.3818 228.4795 399.0195 227.5806 411.6826 c227.0771 418.8799 229.8462 424.9727 234.6714 428.1992 C233.373 429.3545 231.6841 430.4512 229.6265 430.9609 c222.2949 432.7754 219.002 436.7598 217.5303 439.7813 c215.2607 444.4424 215.5171 450.1504 218.2715 456.2871 c218.8804 457.6436 220.1914 458.5508 221.6753 458.6416 c223.1587 458.7305 224.5713 457.9941 225.3418 456.7227 c227.5347 453.1035 229.9087 452.5684 230.5903 453.3379 c231.5869 454.4658 231.6299 455.2871 231.5757 455.8076 c231.4805 456.7139 230.7021 459.2373 225.5361 463.0742 c219.8169 467.3223 216.6196 473.022 216.5327 479.125 c216.4375 485.834 220.0469 492.4136 226.6958 497.6509 c227.939 498.6309 229.6445 498.7847 231.0435 498.0435 c232.4424 497.3022 233.2729 495.8057 233.1611 494.2261 c232.6201 486.5942 234.542 483.645 235.3936 482.731 c236.1353 481.9351 236.9971 481.6108 238.0762 481.6885 C238.5005 484.1636 239.7852 486.6196 241.8354 488.8511 C241.2446 490.6274 240.2466 492.627 238.8887 494.7393 c232.6714 504.4136 234.3735 516.3594 242.937 523.1436 c245.6665 525.3062 247.1978 528.457 247.1382 531.7881 c247.0776 535.1899 245.3594 538.3027 242.3008 540.5527 c240.8794 541.5981 240.311 543.4512 240.9014 545.1133 c241.4917 546.7759 243.1182 547.8555 244.8638 547.77 c250.2495 547.5103 264.5562 546.8188 265.4141 532.3765 c265.5107 530.7471 265.9995 526.958 268.4424 526.9585 c268.8115 526.9585 269.2148 527.0356 269.6074 527.1816 c270.3613 527.4614 270.8135 527.8345 270.9521 528.29 c271.2759 529.3555 270.6694 531.8154 267.9946 535.5234 c261.4077 544.6553 264.0557 555.8906 274.9048 564.8438 c276.3926 566.0718 278.1406 567.9082 278.0195 569.686 c277.8975 571.4868 275.9092 573.707 272.5659 575.7764 c271.042 576.7197 270.3315 578.5605 270.8267 580.2827 c271.3208 582.0049 272.895 583.2329 274.6929 583.1777 c288.1709 583.103 294.9526 578.2998 298.2686 574.2837 c301.3477 570.5537 302.6543 565.9575 301.8535 561.6729 c301.4238 559.3745 301.9111 557.1055 303.1582 555.6035 c303.5645 555.1152 304.4395 554.2842 305.5234 554.3882 c306.5957 554.4956 309.0156 555.9321 309.8174 558.2959 c310.8057 561.2065 309.041 564.9785 304.8486 568.9175 c303.5488 570.1387 303.2148 572.0732 304.0293 573.6597 c304.8438 575.2466 306.6133 576.1035 308.3613 575.7568 c322.1338 573.042 335.3242 562.5918 340.291 550.8252 C345.0195 550.5493 349.6221 549.7661 354.0371 548.4873 C353.7422 549.6304 352.9512 551.2212 351.2246 553.4785 c350.207 554.8096 350.127 556.6338 351.0234 558.0488 c351.9199 559.4648 353.6045 560.1733 355.2422 559.8188 c362.3291 558.2974 367.4219 555.1963 370.3789 550.6025 c372.4844 547.332 373.3994 543.3545 373.0449 539.1787 C379.4629 538.7969 388.5908 538.7505 395.082 538.7505 c399.0361 538.7505 402.9961 538.77 406.707 538.7881 c409.9922 538.8042 413.084 538.8198 415.8057 538.8198 c424.0879 538.8198 426.1826 538.6743 427.3232 538.3882 c429.2051 537.9165 431.2422 536.2373 431.3174 532.9395 c431.4609 526.6597 423.8975 515.6309 409.3203 511.2573 c406.8623 510.5195 404.2617 510.1455 401.5908 510.1455 C401.5908 510.1455 L399.543 510.146 397.4365 510.3638 395.2822 510.7974 C396.5449 508.0889 397.6934 505.2754 398.7217 502.3735 c408.8467 473.7461 411.3359 409.4502 380.6621 386.6426 C372.5879 358.5049 343.9668 332.832 311.9932 325.2559 c308.3545 324.3955 304.5313 323.959 300.6279 323.959 Cf1 D264.3696 362.7568 m260.6406 362.7568 258.5967 360.5205 258.459 356.2881 c258.3843 353.9541 260.2642 350.5713 263.4888 347.2422 c270.856 339.6348 285.1968 331.959 300.6279 331.959 c303.9121 331.959 307.1152 332.3232 310.1504 333.041 c339.4648 339.9863 366.6191 364.5088 373.3105 390.0811 c373.5537 391.0088 374.1221 391.8193 374.9121 392.3633 c387.0938 400.75 394.9287 418.7764 396.9746 443.1191 c398.8613 465.5557 395.4238 487.7056 391.1797 499.7041 c389.1279 505.4995 386.5566 510.8906 383.5361 515.728 c382.5957 517.2344 382.7607 519.1802 383.9414 520.5063 c385.123 521.832 387.0352 522.2222 388.6416 521.4609 c393.2852 519.2612 397.6426 518.146 401.5908 518.1455 C401.5908 518.1455 L403.4824 518.1455 405.3096 518.4063 407.0215 518.9194 c416.5166 521.7686 421.1465 527.522 422.6992 530.7583 C421.2207 530.7949 419.0303 530.8198 415.8057 530.8198 c413.0957 530.8198 410.0176 530.8042 406.7461 530.7881 c403.0225 530.77 399.0488 530.7505 395.082 530.7505 c387.9863 530.7505 377.7783 530.8062 371.0889 531.29 c370.3086 531.3467 369.5615 531.6309 368.9414 532.1074 c368.2012 532.6763 367.3867 533.2617 366.4551 533.897 c365.1055 534.8164 364.4512 536.4629 364.7988 538.0576 c365.1914 539.8506 365.5645 543.3018 363.6523 546.2725 c363.2471 546.9014 362.7559 547.4873 362.1807 548.0298 C362.3066 545.7686 361.7617 543.3574 360.0156 540.9917 c358.957 539.5571 357.0762 538.9971 355.4063 539.6177 c350.0156 541.6191 344.2324 542.7271 338.2188 542.9102 C337.3828 542.9229 L335.6543 542.957 334.1445 544.0967 333.6377 545.749 c331.498 552.7246 325.1875 559.5386 317.5371 563.8506 C318.4932 560.3779 318.0146 557.5562 317.3926 555.7241 c315.5234 550.2183 310.293 546.8252 306.3193 546.4282 c302.7725 546.0752 299.4375 547.5625 297.0039 550.4927 c294.2544 553.8042 293.1274 558.5332 293.9897 563.1436 c294.3535 565.0903 293.6646 567.2944 292.0996 569.1899 c291.0264 570.4897 288.9619 572.3101 285.2197 573.6021 C285.7134 572.3618 285.9341 571.2192 286.0015 570.2285 c286.1948 567.3779 285.3105 563.0591 279.9966 558.6738 c269.7231 550.1953 272.1323 543.4619 274.4829 540.2031 c278.4287 534.7329 279.8159 529.9419 278.606 525.9629 c277.7275 523.0742 275.521 520.8438 272.3926 519.6816 c271.1001 519.2017 269.771 518.9585 268.4429 518.9585 c263.7163 518.958 257.9956 522.3477 257.4277 531.9019 c257.2925 534.1821 256.8262 536.3403 254.0361 537.8315 C254.7236 535.9487 255.1006 533.9629 255.1372 531.9312 c255.2417 526.0859 252.6055 520.5972 247.9048 516.873 c241.6533 511.9204 242.3379 504.1699 245.6187 499.0645 c248.1113 495.186 249.6592 491.5474 250.2202 488.2485 c250.457 486.8574 249.9429 485.4448 248.8677 484.5308 c246.9136 482.8691 245.7485 480.8906 245.9409 479.5752 C245.9478 479.5439 245.9541 479.5132 245.96 479.4829 c246.2993 477.7222 245.4258 475.9556 243.8315 475.1528 c243.6714 475.0649 243.5215 474.9883 243.3564 474.9165 c241.478 474.0947 239.5972 473.6772 237.7681 473.6772 c234.5801 473.6768 231.7349 474.9219 229.54 477.2773 c227.813 479.1313 226.5742 481.603 225.8447 484.6074 C224.9565 482.8325 224.5068 481.022 224.5322 479.2383 c224.583 475.6328 226.5796 472.2642 230.3062 469.4961 c236.0557 465.2266 239.0737 461.0205 239.5322 456.6396 c239.854 453.5605 238.835 450.5869 236.585 448.04 c234.8994 446.1328 232.4185 445.0391 229.7773 445.0391 c227.7871 445.0391 225.8306 445.6377 224.0142 446.7627 C224.0015 445.458 224.2363 444.2832 224.7231 443.2842 c225.7769 441.1201 228.0732 439.5869 231.5488 438.7266 c235.6626 437.708 239.4419 435.2432 242.478 431.5986 c242.5503 431.5117 242.6187 431.4219 242.6831 431.3301 C244.4414 428.8145 L245.2319 427.6836 245.3838 426.2256 244.8438 424.9561 c244.3037 423.6875 243.1479 422.7861 241.7856 422.5713 c237.6758 421.9238 235.1743 417.7734 235.5605 412.2451 c236.251 402.5215 250.437 381.5762 260.7534 377.5684 c261.8774 377.1309 262.5889 377.0391 262.9878 377.0391 c263.4897 377.0391 263.5776 377.1543 263.6992 377.3145 c264.77 378.7207 264.7651 382.9902 264.0474 385.5869 c263.6675 386.9619 263.9219 388.3711 264.7461 389.4531 c265.5669 390.5322 266.8462 391.1504 268.2559 391.1504 c269.063 391.1504 269.7529 390.9473 270.0918 390.8262 c282.3359 386.4648 300.3906 383.1807 311.6152 383.3701 c311.6357 383.3701 311.6563 383.3701 311.6758 383.3701 c313.7969 383.3701 315.5527 381.7119 315.6689 379.5879 c315.9863 373.7588 317.4941 372.8184 320.9805 372.8184 c325.4961 372.8184 328.7539 374.6797 330.9414 378.5098 c331.707 379.8496 333.1807 380.625 334.7188 380.5137 c335.8857 380.4248 337.1055 380.3799 338.3438 380.3799 c343.8994 380.3799 352.6279 381.2832 362.6582 385.5869 c364.6172 386.4277 366.8906 385.583 367.8281 383.6699 c368.7646 381.7549 368.0352 379.4414 366.1699 378.4102 C364.418 377.4424 L352.1543 355.877 326.5078 339.7432 304.2598 339.7422 c292.7583 339.7422 283.6821 344.3525 278.7031 352.7236 c274.5825 359.6553 268.5352 362.7568 264.3696 362.7568 Cf267.8447 370.4111 m274.5913 369.0859 281.2822 364.04 285.5796 356.8125 c290.0381 349.3164 298.1992 347.7422 304.2598 347.7422 c319.0732 347.7432 339.5742 357.3828 352.4766 373.9473 C346.8477 372.7207 341.9961 372.3799 338.3438 372.3799 c337.7246 372.3799 337.1074 372.3896 336.4971 372.4092 C332.8477 367.4932 327.4238 364.8184 320.9805 364.8184 c313.8438 364.8184 309.5361 368.3779 308.1348 375.4111 C297.6797 375.7764 283.8599 378.1992 272.5562 381.6055 C272.5781 378.4707 271.9951 375.0049 270.0654 372.4697 c269.4341 371.6396 268.6855 370.9492 267.8447 370.4111 Cf*U0 D0.53756 0 0.126009 0 0.447059 0.835294 0.92549 Xa331.6709 518.5229 m339.5 491.625 l352 403 l327.1709 379.8838 312.6709 379.3887 v296.3789 378.8496 265.5874 385.6602 256.9209 393.0049 c248.2544 400.3496 244.2544 409.0967 244.5874 415.3682 c244.9204 421.6396 239.8477 432.5508 230.5874 434.8438 c219.9209 437.4844 217.9209 445.7373 221.9209 454.6494 C225.9209 448.0488 231.2544 448.0488 233.5874 450.6885 c235.9204 453.3291 238.2544 458.6113 227.9209 466.2852 c217.5874 473.9604 218.1709 485.8438 229.1709 494.5088 C228.1709 480.397 234.5874 475.4458 241.7544 478.5815 c248.9214 481.7173 246.9209 489.6396 242.2539 496.9019 c237.5869 504.1636 237.9209 514.0664 245.4209 520.0083 c252.9209 525.9502 253.4209 537.3384 244.6709 543.7749 C254.9209 543.2798 260.9209 540.5566 261.4209 532.1392 c261.9209 523.7217 267 521.9463 271 523.4316 c275 524.917 277.4888 529.1982 271.2388 537.8633 c264.9888 546.5283 269.9507 555.5693 277.4507 561.7588 c284.9507 567.9482 282.6709 574.2261 274.6709 579.1777 C293.2544 579.0747 299.1719 569.0923 297.9219 562.4082 c296.6714 555.7236 300.9219 549.9082 305.9219 550.4082 c310.9209 550.9082 320.5879 559.6191 307.5879 571.8325 C322.4209 568.9082 337.9209 555.4082 338.4209 541.4082 c338.9209 527.4082 331.6709 518.5229 yfq331.6709 518.5229 m339.5 491.625 l352 403 l327.1709 379.8838 312.6709 379.3887 v296.3789 378.8496 265.5874 385.6602 256.9209 393.0049 c248.2544 400.3496 244.2544 409.0967 244.5874 415.3682 c244.9204 421.6396 239.8477 432.5508 230.5874 434.8438 c219.9209 437.4844 217.9209 445.7373 221.9209 454.6494 C225.9209 448.0488 231.2544 448.0488 233.5874 450.6885 c235.9204 453.3291 238.2544 458.6113 227.9209 466.2852 c217.5874 473.9604 218.1709 485.8438 229.1709 494.5088 C228.1709 480.397 234.5874 475.4458 241.7544 478.5815 c248.9214 481.7173 246.9209 489.6396 242.2539 496.9019 c237.5869 504.1636 237.9209 514.0664 245.4209 520.0083 c252.9209 525.9502 253.4209 537.3384 244.6709 543.7749 C254.9209 543.2798 260.9209 540.5566 261.4209 532.1392 c261.9209 523.7217 267 521.9463 271 523.4316 c275 524.917 277.4888 529.1982 271.2388 537.8633 c264.9888 546.5283 269.9507 555.5693 277.4507 561.7588 c284.9507 567.9482 282.6709 574.2261 274.6709 579.1777 C293.2544 579.0747 299.1719 569.0923 297.9219 562.4082 c296.6714 555.7236 300.9219 549.9082 305.9219 550.4082 c310.9209 550.9082 320.5879 559.6191 307.5879 571.8325 C322.4209 568.9082 337.9209 555.4082 338.4209 541.4082 c338.9209 527.4082 331.6709 518.5229 yhWn0 O0 0 0 0 1 1 1 Xa243.1709 542.9082 m252.4209 537.6582 254.1709 529.9082 247.1709 523.1582 c240.1709 516.4082 244.6709 506.9082 y246.1709 514.9082 250.6709 518.1582 V249.9209 514.1582 253.9209 507.1582 y258.9209 521.6582 l264.1709 516.6582 l262.1709 524.1582 263.6709 530.4082 v265.1709 536.6582 259.1709 550.1582 250.9209 549.6582 c242.6709 549.1582 243.1709 542.9082 yf228.083 494.4556 m218.627 488.2021 218.4746 476.7637 222.7451 469.9004 c227.0156 463.0371 230.3325 463.0547 227.5874 468.2412 C232.9258 462.75 237.5874 465.2412 y232.5562 467.7119 230.4209 474.5747 V232.8613 470.9146 238.7544 473.4082 y230.5732 475.8672 230.4209 484.4082 v230.3311 489.4502 231.1338 494.9131 y228.083 494.4556 lf272.0083 578.4932 m278.7192 570.105 277.9565 564.6143 271.856 560.8013 c265.7554 556.9883 271.2456 544.3286 273.686 542.041 C272.7544 547.9082 273.9209 552.0747 278.1709 555.1582 C275.5879 548.5747 276.5874 541.9082 285.7544 537.7417 C284.5874 542.5747 282.6338 551.6177 284.9243 554.8628 C284.9243 551.8086 284.2544 546.0747 288.5879 540.0747 C289.2544 542.7417 289.6704 555.3442 289.6709 558.0581 C289.1831 550.5786 296.5 547.9775 y294.1709 553.627 296.3374 561.96 v298.5 570.2783 297.6318 581.6963 289.2432 583.3735 c280.8545 585.0508 273.2285 584.1367 272.0083 578.4932 Cf309.5273 553.3271 m313.4932 553.1748 315.0176 558.8179 y318.7539 553.7412 318.2539 547.7412 V322.5254 551.5542 320.8145 556.2251 y324.5625 554.2891 326.0879 549.4082 V326.9209 555.5747 326.0928 558.6265 320.7539 564.5747 c315.416 570.5229 310.1777 570.2949 305.7539 569.0747 C312.0879 563.4082 314.8662 557.2925 309.5273 553.3271 Cf0.699702 0.145449 0.138338 0 0.2 0.698039 0.854902 Xa305.9297 541.1484 m316.2686 541.1484 321.5391 548.4653 319.2539 558.0747 C329.0176 551.8794 328.2051 540.9858 328.6934 536.4336 c329.417 529.6738 331.2539 514.0747 y340.5879 491.4082 l354.9209 411.7412 l332.9219 389.0752 313.2539 388.4082 v293.5874 387.7412 280.2544 387.4072 262.2544 403.0742 c244.2544 418.7412 246.2534 434.4092 238.2539 436.0752 c230.9209 437.4082 230.2544 442.4082 V235.9209 441.7412 238.9209 442.0742 242.9209 447.4082 c248.2349 454.4941 242.5879 461.7412 239.2544 464.0742 C231.9209 468.0752 230.4209 474.4082 y233.9214 469.4072 244.2544 470.9077 v254.5874 472.4082 258.5874 484.4082 253.5874 491.0747 c248.5874 497.7412 245.5874 507.7412 250.2544 513.4082 c254.9214 519.0752 256.5874 523.0747 255.5874 530.0747 C257.5313 529.2969 261.0415 523.1025 260.8145 518.2554 c260.5874 513.4082 269.2544 509.0747 276.9209 514.0747 c284.5874 519.0747 287.8262 522.6455 283.4927 527.9785 c279.1592 533.3115 274.8755 539.6851 277.314 546.0264 C279.2651 542.124 282.0874 539.9082 284.7544 539.2417 C282.1528 541.8433 278.4521 555.1313 290.6465 562.2852 C288.4585 557.9092 290.3667 549.5771 295.3618 544.7256 c297.79 542.3672 302.9863 541.1484 305.9297 541.1484 cfQ0 A*u0 O0.783993 0.816342 0.831907 0.66833 0.137255 0.094118 0.082353 Xa0 J 0 j 1 w 10 M []0 d0 XR310.7881 377.5195 m293.8442 377.5195 264.5249 384.1494 255.7319 391.6016 c247.3218 398.7295 242.3477 407.873 242.751 415.4658 c243.0601 421.29 238.3032 431.0381 230.1455 433.0586 c224.9844 434.3359 221.2939 436.9883 219.4731 440.7275 c217.4932 444.7939 217.7593 449.8691 220.2432 455.4023 c220.5229 456.0264 221.1255 456.4434 221.8081 456.4854 c222.4907 456.5146 223.1396 456.1865 223.4937 455.6025 c225.313 452.6006 227.6035 450.8789 229.7769 450.8789 c230.7598 450.8789 231.6235 451.2432 232.2095 451.9063 c233.3804 453.2324 233.8765 454.582 233.7246 456.0322 c233.4536 458.623 231.0674 461.6572 226.8242 464.8086 c221.6577 468.6465 218.7705 473.7412 218.6934 479.1553 c218.6079 485.1763 221.9248 491.1421 228.0327 495.9536 c228.6055 496.4033 229.3887 496.4751 230.0317 496.1338 c230.6753 495.793 231.0571 495.105 231.0054 494.3789 c230.5762 488.3218 231.5732 483.6621 233.8125 481.2588 c235.5986 479.3413 238.1523 479.0127 241.0171 480.2666 c242.8071 481.0498 243.9009 482.1714 244.3618 483.6953 c245.2271 486.5566 243.9287 490.8936 240.7065 495.9077 c235.9004 503.3862 235.584 514.5615 244.2788 521.4497 c247.541 524.0342 249.3706 527.8164 249.2988 531.8271 c249.2256 535.918 247.1953 539.6348 243.5811 542.2935 c242.9277 542.7739 242.6665 543.626 242.938 544.3906 c243.2095 545.1543 243.9492 545.6475 244.7598 545.6118 c260.4961 544.8516 262.9111 538.0708 263.2568 532.248 c263.5381 527.5132 265.4282 524.7974 268.4424 524.7974 c269.0747 524.7974 269.7197 524.918 270.3599 525.1558 c271.7793 525.6831 272.6743 526.5259 273.0195 527.6616 c273.6523 529.7432 272.4902 532.9844 269.7471 536.7876 c263.8018 545.0298 266.2441 554.895 276.2803 563.1772 c279.0117 565.4316 280.3223 567.6709 280.1758 569.8325 c280.0005 572.4106 277.7622 575.1016 273.7031 577.6138 c273.0024 578.0474 272.6758 578.894 272.9033 579.6855 c273.1299 580.4741 273.8511 581.0171 274.6709 581.0171 c274.6743 581.0171 274.6777 581.0171 274.6812 581.0171 c287.3232 580.9468 293.5796 576.5684 296.6021 572.9077 c299.2725 569.6733 300.4121 565.7231 299.7285 562.0703 c299.1826 559.1475 299.8438 556.2139 301.4961 554.2231 c302.6768 552.8013 304.1846 552.0811 305.7383 552.2383 c307.6064 552.4253 310.7744 554.3926 311.8633 557.6011 c313.1582 561.4155 311.2441 565.8735 306.3281 570.4922 c305.7305 571.0537 305.5762 571.9434 305.9512 572.6729 c306.3262 573.4023 307.1367 573.8003 307.9434 573.6367 c322.7891 570.71 339.7129 556.7813 340.2588 541.4736 c340.6855 529.5127 335.7656 521.1597 333.8398 518.3691 C348.793 490.4248 L348.8359 490.3442 348.873 490.2603 348.9033 490.1743 C377.6533 409.4668 L377.9482 408.6387 377.6162 407.7178 376.8604 407.2686 c374.8535 406.0762 327.5352 378.0557 312.7344 377.5508 c312.1045 377.5293 311.4551 377.5195 310.7881 377.5195 Cf1 D222.4717 450.8457 m221.54 447.585 221.6382 444.6836 222.7803 442.3379 c224.1274 439.5713 226.9028 437.6504 231.0293 436.6289 c241.1372 434.126 246.8081 422.502 246.4238 415.2705 c246.167 410.4326 249.0737 402.0664 258.1099 394.4082 c266.4482 387.3408 296.7983 380.7021 312.6094 381.2266 c325.1846 381.6563 365.8594 405.0938 373.6777 409.665 C345.4844 488.8105 L330.0488 517.6553 L329.6992 518.3096 329.7773 519.1104 330.2461 519.6855 c330.3115 519.7666 337.0508 528.2588 336.583 541.3428 c336.2402 550.9521 326.7695 563.3208 313.0254 568.395 C316.4629 563.3804 316.3066 559.2466 315.3467 556.4189 c313.7676 551.7686 309.4063 548.9082 306.1045 548.5781 c303.2959 548.2988 300.6367 549.501 298.666 551.873 c296.3228 554.6958 295.3682 558.7607 296.1138 562.7461 c296.5957 565.3247 295.7402 568.1748 293.7656 570.5659 c291.0352 573.8735 286.4165 576.0586 280.4712 576.9224 C282.5361 574.7534 283.6851 572.4414 283.8452 570.082 c284.0771 566.6699 282.3198 563.3926 278.6211 560.3403 c274.6016 557.0229 265.981 548.2969 272.7305 538.939 c276.2607 534.0449 277.542 529.8906 276.5386 526.5918 c275.8613 524.3633 274.1216 522.6289 271.6401 521.7075 c270.5889 521.3174 269.5132 521.1191 268.4424 521.1191 c264.4736 521.1191 260.063 523.9854 259.585 532.0303 c259.2632 537.4487 256.3931 540.2939 249.6704 541.4263 C251.7661 538.646 252.9141 535.3833 252.9766 531.8926 c253.0688 526.7261 250.7314 521.8691 246.563 518.5669 c239.5825 513.0366 239.8896 503.9819 243.8013 497.896 c246.499 493.6978 249.3975 487.6411 247.8828 482.6309 c247.1025 480.0498 245.2886 478.1201 242.4917 476.8965 c238.1851 475.0137 233.9517 475.7129 231.1211 478.7515 c228.772 481.2729 227.4609 485.2124 227.2568 490.2793 C224.0288 486.8335 222.3179 482.9985 222.3716 479.2075 c222.4326 474.9038 224.7305 470.9458 229.0176 467.7617 c234.1821 463.9268 236.9966 460.1084 237.3828 456.415 c237.644 453.918 236.8306 451.582 234.9658 449.4707 c233.6904 448.0273 231.7993 447.2002 229.7769 447.2002 c227.1934 447.2002 224.6392 448.498 222.4717 450.8457 Cf*U0 D0.868864 0.522911 0.283787 0 0 0.439216 0.611765 Xa321.5879 481.0747 m323.9209 508.7412 L286.1709 516.9082 L282.2773 507.8315 269.2988 502.6465 264.9209 503.4082 c257.2544 504.7417 255.9209 511.7417 257.2544 514.4082 C251.5879 507.0747 254.5879 497.7412 260.9209 493.7412 c267.2539 489.7412 266.77 476.3184 257.7329 470.5342 c248.6958 464.75 242.5723 465.7637 240.5732 467.0645 C249.7803 460.0508 248.7139 452.7646 246.8975 447.3711 c245.0811 441.9775 238.0176 439.8076 Y248.0688 437.207 248.021 429.29 v247.9731 421.373 259.1787 396.792 288.0972 394.2617 c317.0156 391.7314 326.2539 407.4082 Y321.5879 481.0747 Lf336.5879 449.4082 m336.5879 476.4683 316.5781 498.2632 290.5117 498.7017 c285.6519 495.0894 280.0771 492.5674 273.6733 495.8584 c273.4189 495.7612 275.4722 495.2388 275.2544 495.0747 c256.2544 480.7412 250.2266 466.9912 250.2266 448.3252 c250.2266 429.6592 251.543 422.8164 256.5532 413.5762 c265.1602 405.0166 276.8472 399.7383 289.73 399.7383 c316.1641 399.7383 336.5879 422.0732 336.5879 449.4082 Cf333.1709 483.9082 m335.6709 479.6582 327.9209 477.4082 332.9209 471.9082 c337.9209 466.4082 321.9209 482.9082 y333.1709 483.9082 lf*u1 D0 0 0 0 1 1 1 Xa289.4111 492.3682 m256.731 489.6782 235.5107 440.4277 264.4111 414.6582 c293.7109 388.5479 329.8906 422.2881 328.6406 453.5977 c327.6709 477.8784 307.5811 493.248 289.4111 492.3682 CF0 D259.4009 469.748 m269.3408 485.0581 288.3608 497.5083 309.2305 482.2183 c309.0908 482.228 295.8511 481.6182 305.4707 467.3789 c310.6709 459.6875 311.0107 453.5176 306.8906 440.9688 c305.4111 434.7783 304.9609 432.9082 303.6309 426.5381 c297.2813 441.7188 292.1011 454.6387 288.0107 471.1582 c291.6011 471.688 295.6807 472.2881 293.5908 474.5981 c293.3208 474.8882 274.3711 473.0083 274.1909 472.978 c272.731 472.728 272.481 471.0181 272.4707 470.998 c272.3208 469.6484 272.5708 469.668 276.6709 469.9082 c277.7607 464.0781 278.251 461.418 280.9307 452.8984 c278.9907 444.8584 276.9907 436.5488 276.7207 423.6885 c268.0811 440.8789 264.6211 452.8184 263.9707 467.748 c265.1909 468.4883 266.8311 468.1982 267.9111 469.3086 c268.6509 470.0684 269.0107 471.7681 268.0908 471.9683 c264.8208 472.6782 262.3311 470.3584 259.4009 469.748 CF304.8008 416.1387 m308.291 431.1982 314.1016 445.5977 317.5215 460.6777 c318.1807 463.5977 318.751 468.1387 317.7207 473.1982 c327.9004 457.2881 326.7305 432.5879 304.8008 416.1387 CF274.981 411.6777 m252.9507 421.6885 248.9111 445.418 256.3008 463.6875 c256.5811 445.6084 261.6411 431.5186 274.981 411.6777 CF287.8911 409.5586 m285.0811 409.3779 282.791 409.5381 279.9907 410.1182 c279.1411 418.5283 278.6011 429.0381 282.8408 447.3584 c290.541 427.418 299.0215 412.7979 299.0811 412.7178 c297.6406 412.0283 293.251 409.9385 287.8911 409.5586 CF*Uu0 0.592554 0.914763 0 1 0.533333 0 Xa271.811 501.458 m255.7007 496.9082 254.0508 504.3481 257.771 505.168 c261.481 505.998 271.4009 511.7881 276.3608 516.7383 C271.811 501.458 Lf*u0.783993 0.816342 0.831907 0.66833 0.137255 0.094118 0.082353 Xa262.8423 497.4951 m256.4839 497.4951 253.9165 500.2681 253.6338 502.8628 c253.3901 505.1001 254.9038 507.0962 257.2329 507.6094 c260.3516 508.3071 269.9238 513.8462 274.5947 518.5078 C281.5688 525.4678 L273.8145 499.4258 L272.4907 499.0522 L268.832 498.019 265.5859 497.4951 262.8423 497.4951 Cf1 D259.3823 503.0303 m260.041 502.7588 261.1387 502.4951 262.8423 502.4951 c264.8086 502.4951 267.1484 502.8364 269.814 503.5107 C271.6655 509.73 L267.2891 506.6909 262.4106 504.0356 259.3823 503.0303 Cf*UUu0 D0 0.592554 0.914763 0 1 0.533333 0 Xa377.1807 389.0684 m370.1514 362.208 342.4707 336.5879 311.0703 329.1484 c284.0508 322.7578 254.0508 343.6084 254.4609 356.418 c254.9307 370.8486 273.0508 370.0586 282.1411 354.7686 c296.0708 331.3486 343.7109 347.748 361.4805 380.3887 C377.1807 389.0684 Lf*u0.783993 0.816342 0.831907 0.66833 0.137255 0.094118 0.082353 Xa300.6279 325.459 m283.2954 325.459 267.1411 334.127 258.8203 342.7178 c254.1978 347.4912 251.8262 352.2559 251.9624 356.498 c252.2144 364.249 257.0845 369.2568 264.3696 369.2568 c271.6992 369.2568 279.5186 364.0713 284.29 356.0459 c289.1084 347.9443 297.8096 346.2432 304.2598 346.2422 c304.2617 346.2422 304.2637 346.2422 y321.8535 346.2422 347.2402 359.4609 359.2852 381.584 C359.6328 382.2236 L381.0762 394.0781 L379.5996 388.4355 L372.2246 360.2539 343.6465 334.2969 311.6465 326.7158 c308.123 325.8818 304.416 325.46 300.6279 325.459 Cf1 D264.3696 364.2568 m259.8242 364.2568 257.1235 361.3701 256.9595 356.3369 c256.8706 353.5625 258.8579 349.8662 262.4121 346.1963 c269.999 338.3633 284.7583 330.459 300.627 330.459 c304.0283 330.46 307.3477 330.8369 310.4961 331.5811 c338.5508 338.2285 363.7979 359.6709 372.8926 383.8408 C363.3203 378.5498 L351.3906 357.2354 326.1367 341.2441 304.2646 341.2422 c304.2617 341.2422 304.2617 341.2422 304.2598 341.2422 c293.3076 341.2441 284.6895 345.5938 279.9927 353.4902 c275.2676 361.4375 268.6235 364.2568 264.3696 364.2568 Cf*UU0 D0.669795 0.268681 0.223941 0 0.341176 0.631373 0.745098 Xa274.9507 496.5781 m274.771 496.4482 274.5908 496.2983 274.4111 496.1582 c274.6807 496.2583 274.9507 496.3481 275.2207 496.4482 c275.1309 496.498 275.041 496.5283 274.9507 496.5781 Cf293.1011 499.3682 m292.8208 499.3682 292.5508 499.3882 292.271 499.3882 c286.291 499.3882 280.5508 498.3481 275.2207 496.4482 c282.021 493.0684 287.9409 495.6582 293.1011 499.3682 Cfu0.046296 0.220066 0.88571 0 1 0.823529 0 Xa346.4209 496.1582 m335.0313 507.6484 L324.7012 504.3481 312.7207 501.458 301.9805 508.0684 c297.4307 499.7983 286.5107 495.0083 279.9209 495.4082 c273.3311 495.8081 268.2808 503.918 276.3608 516.7383 c288.3408 535.748 311.0703 547.728 338.3408 546.9082 c365.6113 546.0781 385.4404 527.8984 394.9512 501.0381 c404.4512 474.1782 407.4014 409.8779 377.1807 389.0684 c360.4307 377.5381 343.8711 375.668 333.791 376.5684 C336.3906 409.208 L342.9404 424.1982 354.9209 427.4082 367.5879 426.7412 C365.2549 437.4082 367.5879 459.7422 y346.4209 496.1582 lf*u0.783993 0.816342 0.831907 0.66833 0.137255 0.094118 0.082353 Xa338.3398 374.3721 m336.7207 374.3721 335.1309 374.4404 333.6133 374.5762 c332.5205 374.6738 331.7109 375.6338 331.7969 376.7275 C334.3965 409.3672 L334.4141 409.5879 334.4688 409.8057 334.5586 410.0088 c340.0898 422.6689 349.9102 428.8232 364.5801 428.8232 c364.7813 428.8232 364.9844 428.8213 365.1904 428.8193 C363.7168 439.1836 365.1885 455.7471 365.5332 459.2969 C344.8203 494.9321 L334.4707 505.3735 L328.8564 503.6221 322.8486 502.0864 316.6621 502.0864 c311.4766 502.0859 306.8789 503.165 302.668 505.3765 C297.334 497.5908 286.7056 492.9893 279.7998 493.4121 c276.248 493.6274 273.1504 495.6616 271.5132 498.854 c270.0405 501.7251 268.4927 508.0049 274.6689 517.8047 c286.9585 537.3057 309.7793 548.9478 335.7168 548.9478 c336.6074 548.9478 337.5 548.9346 338.4004 548.9072 c365.2051 548.0913 386.5039 530.8872 396.8359 501.7056 c401.2949 489.1006 404.915 465.9414 402.9541 442.6172 c400.1348 409.0781 387.999 394.0889 378.3145 387.4209 c361.8213 376.0674 346.1895 374.3721 338.3398 374.3721 Cf1 D335.9453 378.4268 m336.7305 378.3906 337.5303 378.3721 338.3398 378.3721 c345.7246 378.3721 360.4443 379.9756 376.0469 390.7158 c405.082 410.709 402.5195 473.6411 393.0654 500.3711 c383.3145 527.9126 363.3457 544.146 338.2793 544.9092 c337.4199 544.9351 336.5664 544.9478 335.7168 544.9478 c311.1621 544.9478 289.6055 534.0034 278.0527 515.6719 c274.3145 509.7402 273.228 504.2754 275.0723 500.6792 c276.0728 498.729 277.8843 497.5356 280.042 497.4043 c280.2583 497.3916 280.4795 497.3848 280.7061 497.3848 c287.0396 497.3853 296.3955 502.0659 300.2285 509.0327 c300.4922 509.5122 300.9414 509.8623 301.4707 510.002 c302 510.1406 302.5625 510.0581 303.0293 509.7715 c307.0586 507.2915 311.5176 506.0859 316.6621 506.0864 c322.7324 506.0864 328.7852 507.7529 334.4229 509.5537 c335.1367 509.7822 335.9219 509.5908 336.4512 509.0566 C347.8418 497.5664 L347.9609 497.4458 348.0645 497.3101 348.1504 497.1631 C369.3164 460.7471 L369.5303 460.3809 369.6211 459.9561 369.5771 459.5342 c369.5547 459.3145 367.3047 437.3965 369.541 427.1689 c369.6748 426.5586 369.5156 425.9219 369.1123 425.4463 c368.709 424.9717 368.1113 424.7119 367.4824 424.7441 c366.4893 424.7959 365.5127 424.8232 364.5801 424.8232 c351.6113 424.8232 343.2695 419.7002 338.3574 408.7109 C335.9453 378.4268 Lf*UU0 D0.929717 0.879728 0.890196 0.799985 0 0 0 Xa337.1006 408.2783 m336.8213 408.2783 336.541 408.3379 336.2813 408.4678 c335.3613 408.918 334.9805 410.0381 335.4307 410.958 c340.4209 421.1387 349.8311 427.6387 361.2305 428.7979 c370.6406 429.748 380.0107 426.7881 384.0205 421.6084 c384.6514 420.7881 384.501 419.6182 383.6904 418.998 c382.8711 418.3682 381.7012 418.5186 381.0811 419.3281 c377.8613 423.4883 369.6904 425.9082 361.6006 425.0986 c355.6709 424.4883 344.8105 421.6484 338.7705 409.3184 c338.4404 408.6582 337.7813 408.2783 337.1006 408.2783 Cfu0 0.592554 0.914763 0 1 0.533333 0 Xa370.5713 535.3384 m363.1406 535.9385 368.9111 530.3779 371.3906 528.3081 c373.8711 526.248 391.6406 510.1284 408.1709 515.0884 c424.7012 520.0483 429.6611 533.6782 426.3506 534.5083 c423.041 535.3384 385.8613 534.0981 370.5713 535.3384 Cf*u0.783993 0.816342 0.831907 0.66833 0.137255 0.094118 0.082353 Xa401.5898 511.6455 m401.5889 511.6455 401.5879 511.6455 401.5869 511.6455 c394.9824 511.646 384.1836 514.1367 370.248 526 C369.793 526.3848 L363.3555 531.7593 364.3105 534.394 364.624 535.2598 c365.0586 536.4565 366.2637 537.8833 369.541 537.8833 c369.9121 537.8833 370.3223 537.8667 370.7725 537.8301 c377.1934 537.3096 387.6875 537.249 395.0215 537.249 c398.9971 537.249 402.9785 537.269 406.708 537.2876 c410.0039 537.3037 413.1045 537.3193 415.832 537.3193 c423.8506 537.3193 425.9834 537.1777 426.959 536.9331 c428.3037 536.5957 429.7617 535.3608 429.8174 532.9053 c429.9287 528.0806 423.9033 517.1987 408.8896 512.6938 c406.5703 511.998 404.1143 511.6455 401.5898 511.6455 Cf1 D370.2852 532.853 m370.8887 532.1416 371.793 531.2285 372.9922 530.2271 C373.4893 529.8071 L386.2676 518.9297 395.8223 516.646 401.5879 516.6455 C401.5889 516.6455 401.5898 516.6455 v403.6279 516.6455 405.5996 516.9272 407.4521 517.4829 c419.334 521.0483 424.2588 529.2598 424.7852 532.1792 C423.5371 532.2544 420.9609 532.3193 415.832 532.3193 c413.1113 532.3193 410.0195 532.3037 406.7334 532.2876 c402.9951 532.269 399.0059 532.249 395.0215 532.249 c387.6006 532.249 376.9707 532.311 370.3691 532.8467 c370.3408 532.8486 370.3125 532.8511 370.2852 532.853 Cf*UU0 D0.929717 0.879728 0.890196 0.799985 0 0 0 Xa298.6709 518.8081 m295.7109 516.5884 296.6108 513.8481 299.9111 513.438 c303.2207 513.0181 303.4707 512.8081 306.5215 515.0884 c309.8311 517.5684 310.2402 521.6982 306.5215 521.2881 c302.8008 520.8682 300.3203 520.0483 298.6709 518.8081 Cf289.9907 517.1582 m289.9907 515.0981 288.3311 513.438 286.2808 513.438 c284.2207 513.438 282.561 515.0981 282.561 517.1582 c282.561 519.208 284.2207 520.8682 286.2808 520.8682 c288.3311 520.8682 289.9907 519.208 289.9907 517.1582 Cf332.9707 527.4883 m332.9707 525.4282 331.3008 523.7681 329.251 523.7681 c327.1914 523.7681 325.5313 525.4282 325.5313 527.4883 c325.5313 529.5381 327.1914 531.1982 329.251 531.1982 c331.3008 531.1982 332.9707 529.5381 332.9707 527.4883 Cfu0.046296 0.220066 0.88571 0 1 0.823529 0 Xa255.2407 490.7583 m251.1108 492.4082 240.7808 485.3882 242.021 478.7681 c243.251 472.1582 250.6909 472.1582 255.6509 477.1182 c260.6108 482.0781 259.2407 489.1582 255.2407 490.7583 Cf*u0.929717 0.879728 0.890196 0.799985 0 0 0 Xa248.0103 471.5825 m248.0103 471.5825 L243.8857 471.5825 240.8374 474.1958 240.0547 478.4023 c239.542 481.1392 240.5112 484.1558 242.7847 486.8945 c245.7222 490.4336 250.3662 493.0024 253.8267 493.0024 c254.6152 493.0024 255.3403 492.8721 255.9829 492.6157 c258.3042 491.687 260.0381 489.4336 260.6226 486.5869 c261.4033 482.7808 260.0737 478.7124 257.0649 475.7041 c254.4458 473.0845 251.1455 471.5825 248.0103 471.5825 Cf1 D253.8267 489.0024 m251.8579 489.0024 248.2529 487.2197 245.8623 484.3398 c244.9937 483.2935 243.5952 481.2261 243.9868 479.1362 c244.5337 476.1987 246.4766 475.5825 248.0103 475.5825 c250.062 475.582 252.3892 476.6851 254.2368 478.5322 c256.2915 480.5874 257.2139 483.2979 256.7041 485.7827 c256.3911 487.3081 255.5664 488.4741 254.498 488.9014 c254.3833 488.9473 254.1729 489.0024 253.8267 489.0024 Cf*UU0 D0.53756 0 0.126009 0 0.447059 0.835294 0.92549 Xa354.4023 555.9082 m360.9023 547.4082 358.9219 542.7412 349.5879 538.0747 c340.2539 533.4082 340.5518 525.0752 342.5703 518.7417 c344.5879 512.4082 335.9199 507.5747 328.9209 506.0747 c321.9219 504.5747 335.9043 501.4082 348.4033 500.4082 c360.9023 499.4082 366.8828 501.0747 374.5684 506.5747 c382.2539 512.0747 382.5879 522.0747 377.5879 529.0747 C376.9209 521.7412 372.7363 520.0752 368.5879 521.4082 c364.4395 522.7412 364.8838 528.4082 367.4023 533.4082 c369.9209 538.4082 372.2539 552.0747 354.4023 555.9082 Cfq354.4023 555.9082 m360.9023 547.4082 358.9219 542.7412 349.5879 538.0747 c340.2539 533.4082 340.5518 525.0752 342.5703 518.7417 c344.5879 512.4082 335.9199 507.5747 328.9209 506.0747 c321.9219 504.5747 335.9043 501.4082 348.4033 500.4082 c360.9023 499.4082 366.8828 501.0747 374.5684 506.5747 c382.2539 512.0747 382.5879 522.0747 377.5879 529.0747 C376.9209 521.7412 372.7363 520.0752 368.5879 521.4082 c364.4395 522.7412 364.8838 528.4082 367.4023 533.4082 c369.9209 538.4082 372.2539 552.0747 354.4023 555.9082 ChWn0 O0 0 0 0 1 1 1 Xa355.4209 554.9082 m359.2539 548.0747 361.0879 541.9082 352.9209 537.9082 c344.7539 533.9082 346.5879 528.7417 y347.9209 533.0752 353.9209 534.2417 v359.9209 535.4082 361.7539 537.7417 y362.5879 529.9082 357.9209 525.4082 V364.2539 527.2417 368.0879 534.4077 368.4209 540.5747 c368.7539 546.7417 367.4219 550.4087 363.0879 552.7417 c358.7539 555.0747 355.4209 554.9082 yf0.699702 0.145449 0.138338 0 0.2 0.698039 0.854902 Xa340.9209 503.7417 m352.2539 505.7417 350.5879 512.7417 348.9209 519.0747 c347.2539 525.4077 350.9209 530.0747 355.2539 532.0747 c359.5879 534.0747 361.5879 535.4082 361.5879 538.0747 C363.5879 534.0747 361.2539 529.4082 357.9209 525.4082 c354.5879 521.4082 355.5879 514.7417 361.9209 512.4082 c368.2539 510.0747 373.9209 514.0747 374.9209 517.0747 C374.2539 510.4082 374.9209 506.7417 365.5879 502.7417 c356.2539 498.7417 351.9219 501.0747 347.2539 501.0747 c342.5879 501.0747 340.9209 503.7417 yfQ0 A*u0 O0.783993 0.816342 0.831907 0.66833 0.137255 0.094118 0.082353 Xa0 J 0 j 1 w 10 M []0 d0 XR354.5791 498.2949 m352.6787 498.2949 350.6104 498.3867 348.2568 498.5747 c343.1992 498.9795 337.8516 499.7319 333.582 500.6387 c326.7246 502.0962 325.3203 503.3232 325.2139 504.9507 c325.0703 507.1304 327.6787 507.6895 328.5352 507.873 c332.8887 508.8062 338.4512 511.3203 340.375 514.6362 c341.0576 515.8145 341.2031 516.9746 340.8174 518.1831 c337.7051 527.9526 340.5273 535.6011 348.7656 539.7197 c353.3516 542.0127 355.7295 544.1265 356.248 546.3726 c356.7383 548.4878 355.6563 551.2417 352.9414 554.791 c352.4746 555.4028 352.4375 556.2417 352.8496 556.8926 c353.2617 557.5444 354.0352 557.8687 354.7891 557.7065 c362.1416 556.1274 367.0762 552.8047 369.457 547.8306 c372.0703 542.3677 370.8691 536.2017 369.0449 532.5811 c367.4629 529.439 366.9141 526.2764 367.6484 524.5239 c367.9395 523.8286 368.416 523.395 369.1504 523.1592 c369.833 522.9399 370.4883 522.8286 371.0977 522.8286 c374.4668 522.8286 375.4902 526.3159 375.7559 529.2412 c375.8262 530.0068 376.3652 530.6484 377.1064 530.8496 c377.8516 531.0513 378.6387 530.769 379.084 530.1436 c384.3359 522.7925 384.4824 511.4072 375.6387 505.0791 c368.6387 500.0703 363.1289 498.2949 354.5791 498.2949 Cf1 D331.6367 504.8784 m335.2412 503.9233 341.4961 502.8057 348.5498 502.2417 c350.8047 502.061 352.7773 501.9731 354.5791 501.9731 c362.3535 501.9731 367.1279 503.5117 373.498 508.0703 c377.9912 511.2856 380.6465 517.5723 378.2129 524.0698 C377.1055 521.5654 375.0205 519.1504 371.0977 519.1504 c370.1055 519.1504 369.0723 519.3208 368.0254 519.6572 c366.2656 520.2227 364.9629 521.4141 364.2549 523.103 c363.0889 525.8877 363.6514 530.0493 365.7598 534.2354 c366.9258 536.5518 368.3184 541.6865 366.1387 546.2427 c364.7871 549.0679 362.2676 551.2373 358.625 552.7217 C359.9531 550.0698 360.3379 547.7295 359.832 545.5439 c359.0361 542.1006 356.1309 539.2896 350.4102 536.4297 c343.8018 533.1255 341.7539 527.3623 344.3223 519.3003 c345.0205 517.1089 344.7559 514.8579 343.5566 512.7905 c341.291 508.8853 336.1416 506.2339 331.6367 504.8784 Cf*Uu0 D0.046296 0.220066 0.88571 0 1 0.823529 0 Xa338.4209 505.1582 m329.6709 506.6582 318.6709 505.4082 311.4209 500.6582 c304.126 495.8784 303.9209 488.6582 306.4209 486.1582 c308.9209 483.6582 314.9209 483.4082 321.4209 484.4082 c327.9209 485.4082 338.1709 485.9082 347.4209 481.9082 c356.6709 477.9082 362.9209 488.6582 358.6709 494.6582 c354.4209 500.6582 347.1709 503.6582 338.4209 505.1582 cf*u0.783993 0.816342 0.831907 0.66833 0.137255 0.094118 0.082353 Xa351.3701 479.0381 m351.3691 479.0381 351.3701 479.0381 351.3691 479.0381 c349.8105 479.0381 348.2148 479.3862 346.627 480.0723 c341.9619 482.0898 336.5244 483.1128 330.4648 483.1128 c327.6045 483.1128 324.6641 482.8838 321.7246 482.4316 c319.2617 482.0527 316.9648 481.8604 314.8945 481.8604 c310.2471 481.8604 306.9199 482.8306 305.0068 484.7441 c303.4951 486.2559 302.7578 488.7676 303.0361 491.4634 c303.4639 495.6152 306.1211 499.5762 310.3242 502.3311 c315.5879 505.7798 323.1797 507.7573 331.1514 507.7573 c333.7686 507.7573 336.3281 507.5459 338.7588 507.1294 c349.1211 505.353 356.168 501.6519 360.3027 495.8145 c362.4551 492.7764 362.6172 488.6172 360.7256 484.96 c358.8076 481.252 355.3105 479.0381 351.3701 479.0381 Cf1 D330.4648 487.1128 m337.0742 487.1128 343.0449 485.9795 348.2148 483.7441 c349.2979 483.2754 350.3594 483.0381 351.3701 483.0381 c353.7852 483.0381 355.9551 484.4434 357.1719 486.7974 c358.3555 489.0854 358.3027 491.7173 357.0391 493.502 c353.5479 498.4307 347.3477 501.5986 338.083 503.187 c335.875 503.5654 333.543 503.7573 331.1514 503.7573 c323.9375 503.7573 317.1465 502.0181 312.5176 498.9854 c309.3242 496.8936 307.3184 494.0024 307.0156 491.0532 c306.832 489.2729 307.3418 488.0654 307.835 487.5723 c308.4746 486.9331 310.2422 485.8604 314.8945 485.8604 c316.7617 485.8604 318.8545 486.0371 321.1172 486.3848 c324.2559 486.8677 327.4014 487.1128 330.4648 487.1128 Cf*UU0 D0.53756 0 0.126009 0 0.447059 0.835294 0.92549 Xa347.9209 414.4082 m350.9219 410.0742 362.2539 415.4082 v367.0391 417.6602 376.2539 421.7412 375.1006 427.6836 c373.9473 433.626 379.4063 439.9424 385.5449 442.499 c396.168 446.9238 396.5918 456.2646 390.5879 466.4082 C390.5879 456.0234 382.2539 453.7412 378.3887 456.5068 c374.5674 459.2412 372.5879 464.7412 380.2539 469.7412 c387.9219 474.7412 388.2539 485.3306 383.9209 490.7412 c378.752 497.1948 376.2539 506.7412 384.8652 511.0693 C372.9209 514.7412 369.502 505.9487 370.1045 500.5264 c370.707 495.104 368.8232 491.8662 363.1758 492.3931 c357.5283 492.9199 355.167 501.0957 360.6904 507.8584 C350.123 507.6167 347.002 499.4053 349.4033 491.9185 c351.8047 484.4316 345.7539 482.4082 339.0879 484.2417 c347.9209 414.4082 lfq347.9209 414.4082 m350.9219 410.0742 362.2539 415.4082 v367.0391 417.6602 376.2539 421.7412 375.1006 427.6836 c373.9473 433.626 379.4063 439.9424 385.5449 442.499 c396.168 446.9238 396.5918 456.2646 390.5879 466.4082 C390.5879 456.0234 382.2539 453.7412 378.3887 456.5068 c374.5674 459.2412 372.5879 464.7412 380.2539 469.7412 c387.9219 474.7412 388.2539 485.3306 383.9209 490.7412 c378.752 497.1948 376.2539 506.7412 384.8652 511.0693 C372.9209 514.7412 369.502 505.9487 370.1045 500.5264 c370.707 495.104 368.8232 491.8662 363.1758 492.3931 c357.5283 492.9199 355.167 501.0957 360.6904 507.8584 C350.123 507.6167 347.002 499.4053 349.4033 491.9185 c351.8047 484.4316 345.7539 482.4082 339.0879 484.2417 c347.9209 414.4082 lhWn0 O0 0 0 0 1 1 1 Xa358.5879 507.0747 m350.5879 505.4082 347.9209 499.4082 349.2539 493.4082 c350.5879 487.4082 354.6533 487.4741 y352.3076 491.5366 353.8076 495.3701 V355.3584 491.9863 357.6152 490.7173 360.4346 490.0122 C359.6436 490.5259 356.7539 493.4087 356.5879 497.2417 c356.4209 501.0747 358.5879 507.0747 yf382.4209 511.4082 m374.4209 512.5747 371.0879 506.5747 371.7539 499.5747 c372.0049 496.9429 372.0879 492.8247 368.7539 488.8247 C371.0879 488.8247 374.4219 490.5747 374.7539 492.9912 C375.7539 491.5747 376.1396 486.3496 376.2646 484.3047 C378.9004 486.8975 378.3564 491.6943 377.6592 493.7856 C380.1689 490.3003 380.5869 488.0688 y382.8184 491.2759 380.1689 496.1558 v377.5195 501.0356 382.4209 511.4082 yfQ0 A0 O0.699702 0.145449 0.138338 0 0.2 0.698039 0.854902 Xa0 J 0 j 1 w 10 M []0 d0 XR376.9219 475.7422 m369.5879 468.0752 363.2539 462.7412 367.2539 454.4082 c371.2539 446.0752 380.5879 448.0752 y371.2539 443.7412 370.2539 435.7412 v369.2539 427.7412 373.2539 425.0752 368.2539 417.0752 c363.2539 409.0752 335.4307 410.958 y339.334 479.333 338.7539 484.0747 V341.0879 479.7417 344.2549 476.9077 349.9219 477.7412 c355.5879 478.5747 359.9209 485.7417 355.9209 490.0747 C362.2676 486.4868 362.0889 482.4746 361.4219 480.1416 c360.7549 477.8086 362.8066 475.8794 364.8066 475.6294 c366.8066 475.3794 369.9902 477.1943 368.7354 480.4009 c367.4805 483.6074 369.9883 486.0552 371.8027 487.5112 c373.2871 488.7017 374.7539 491.0576 374.7305 493.228 C376.9619 490.021 377.6592 484.4438 375.0098 481.2373 C380.0293 482.3525 380.3086 486.5352 y383.2363 479.564 376.9219 475.7422 Vf0.78613 0.819455 0.835538 0.675074 0.133333 0.090196 0.078431 Xa352.6113 411.1934 m348.2969 411.1914 346.6602 413.2813 346.4082 413.6445 C349.4336 415.7383 L349.4326 415.7383 349.4326 415.7383 349.4336 415.7383 C349.4434 415.7402 352.084 412.9395 361.4707 417.3555 C362 417.6035 L366.2412 419.5918 374.1348 423.293 373.2949 427.6172 c371.9395 434.5977 378.0977 441.6719 384.8369 444.4805 c388.6768 446.0801 391.126 448.4004 392.1162 451.3809 c392.9961 454.0273 392.75 457.2266 391.416 460.7969 C390.4102 458.168 388.6816 456.1348 386.3535 454.9375 c383.3379 453.3867 379.7891 453.5273 377.3184 455.293 c374.625 457.2207 373.1152 459.9414 373.1758 462.7559 c373.2246 464.998 374.3174 468.3477 379.25 471.5645 c382.1836 473.4771 384.1182 476.5244 384.6982 480.145 c385.2715 483.7261 384.4238 487.4536 382.4854 489.873 c378.4561 494.9043 376.6465 500.6367 377.6436 505.2085 c378.0723 507.1753 379.0078 508.9131 380.4033 510.3643 C378.0703 510.5205 376.168 509.9927 374.7168 508.791 c372.4082 506.8799 371.6553 503.5068 371.9326 501.0112 c372.3408 497.3345 371.6758 494.5825 369.9551 492.8311 c368.3809 491.229 366.0391 490.5586 363.0049 490.8438 c360.0918 491.1152 357.7285 492.9263 356.5215 495.812 c355.252 498.8418 355.4805 502.4302 357.042 505.7813 C354.9141 505.1797 353.2432 504.0688 352.1182 502.4888 c350.3555 500.0127 349.9951 496.3765 351.1543 492.7622 c352.5762 488.3301 351.3086 485.7676 349.9961 484.3979 c347.7246 482.0288 343.6602 481.0713 338.7959 482.4082 c337.8164 482.6777 337.0449 484.0313 337.3145 485.0107 c337.584 485.9893 338.5918 486.5679 339.5762 486.2964 c343.0098 485.3511 346.0586 485.6055 347.3418 486.9438 c348.4668 488.1172 348.1309 490.1445 347.6523 491.6387 c346.1172 496.4224 346.6523 501.1553 349.1211 504.6226 c350.8027 506.9844 354.168 509.8306 360.6484 509.979 c361.4033 509.9741 362.0283 509.5918 362.3428 508.9473 c362.6582 508.3022 362.5684 507.5327 362.1152 506.9766 c359.0508 503.2246 359.0137 499.3823 359.9141 497.2324 c360.3047 496.2974 361.2715 494.6997 363.3467 494.5059 c365.2305 494.3315 366.5703 494.6343 367.3311 495.4092 c368.4619 496.5601 368.4688 498.8696 368.2764 500.605 c367.918 503.8281 368.7754 508.6475 372.3711 511.6245 c374.5771 513.4517 378.6289 515.1934 385.4043 513.1089 c386.123 512.8882 386.6348 512.2534 386.6973 511.5049 c386.7598 510.7568 386.3613 510.0454 385.6904 509.708 c383.2305 508.4712 381.7324 506.6938 381.2373 504.4243 c380.4854 500.9785 382.0635 496.2837 385.3564 492.1729 c387.9619 488.9199 389.0742 484.2061 388.3301 479.5635 c387.584 474.9053 385.0732 470.9697 381.2598 468.4844 c378.4189 466.6309 376.8955 464.623 376.8535 462.6758 c376.8047 460.4316 378.6592 458.8574 379.459 458.2852 c380.7988 457.3262 382.8945 457.2949 384.6719 458.209 c386.1943 458.9922 388.748 461.1348 388.748 466.6914 c388.748 467.5215 389.3027 468.2461 390.1025 468.4648 c390.9004 468.6875 391.748 468.3418 392.1699 467.6289 c396.0332 461.1016 397.2227 455.082 395.6064 450.2207 c394.2656 446.1855 391.1182 443.1113 386.251 441.084 c380.9902 438.8926 375.9209 433.3887 376.9063 428.3184 c378.293 421.1777 369.0713 416.8555 363.5615 414.2734 C363.0371 414.0273 L358.499 411.8926 355.1064 411.1934 352.6113 411.1934 Cf0.868864 0.522911 0.283787 0 0 0.439216 0.611765 Xa327.4209 478.9082 m333.5879 469.4082 337.0879 469.4072 343.7539 469.0742 c350.4209 468.7412 356.7549 473.4082 357.0879 475.7417 C360.0879 468.4082 357.9209 461.7412 349.7539 457.7412 c341.5879 453.7412 340.7539 445.7412 344.2539 442.4082 c347.7539 439.0752 357.0879 439.4072 357.7539 449.7412 C361.7539 435.7412 354.2539 421.7412 342.2539 413.7412 c330.2539 405.7412 314.9209 395.7412 303.9209 394.7412 C319.5879 408.0752 330.5879 426.4072 331.9209 437.7412 c333.2539 449.0752 324.2539 474.7417 y327.4209 478.9082 lfu0.046296 0.220066 0.88571 0 1 0.823529 0 Xa382.6709 420.1582 m370.1709 434.4082 343.6709 425.6582 333.4209 410.4082 c335.9209 397.4082 lF0.929717 0.879728 0.890196 0.799985 0 0 0 Xa335.918 395.4082 m334.9785 395.4082 334.1406 396.0732 333.957 397.0303 C331.457 410.0303 L331.3574 410.5488 331.4668 411.0859 331.7617 411.5234 c338.2793 421.2217 351.2383 428.5342 363.2754 429.3076 c371.8438 429.8613 379.2627 427.0762 384.1738 421.4775 c384.9023 420.6465 384.8203 419.3828 383.9902 418.6543 c383.1592 417.9258 381.8955 418.0098 381.168 418.8389 c375.9453 424.792 368.6934 425.6484 363.5313 425.3154 c352.9297 424.6348 341.5508 418.3613 335.5439 409.96 C337.8848 397.7861 L338.0938 396.7012 337.3828 395.6523 336.2988 395.4443 c336.1709 395.4199 336.0439 395.4082 335.918 395.4082 CfUu0.046296 0.220066 0.88571 0 1 0.823529 0 Xa336.6709 382.6582 m334.6211 368.8184 320.9805 368.8184 v307.3516 368.8184 313.1309 385.3486 311.4805 396.0879 c309.8311 406.8281 303.2207 420.8779 313.1309 427.4883 c323.0508 434.0986 333.6016 417.3379 335.6709 409.9082 c338.5615 399.9883 339.1514 390.5078 336.6709 382.6582 Cf*u0.929717 0.879728 0.890196 0.799985 0 0 0 Xa320.9805 366.8184 m317.5146 366.8184 314.8047 367.8027 312.9277 369.7432 c309.2852 373.5078 309.5029 380.042 309.7129 386.3604 c309.8213 389.6191 309.9336 392.9902 309.5039 395.7842 c309.1523 398.0703 308.5693 400.5107 307.9512 403.0938 c305.6943 412.5303 303.1367 423.2256 312.0215 429.1523 c313.8613 430.3789 315.832 431 317.8779 431 c327.8457 431 335.9121 416.4941 337.5977 410.4443 c340.6992 399.8018 341.0557 390.0342 338.625 382.2041 C337.7588 376.7881 333.0156 366.8184 320.9805 366.8184 Cf1 D317.8779 427 m316.6172 427 315.4277 426.6152 314.2402 425.8242 c307.6748 421.4453 309.6992 412.9824 311.8418 404.0234 c312.4512 401.4756 313.082 398.8408 313.458 396.3916 c313.9434 393.2295 313.8252 389.6699 313.7109 386.2266 c313.5283 380.7422 313.3398 375.0703 315.8027 372.5244 c316.9131 371.376 318.6074 370.8184 320.9805 370.8184 c332.6895 370.8184 334.6172 382.4609 334.6934 382.957 C334.7637 383.2607 L337.0059 390.3574 336.6563 399.3789 333.751 409.3486 c332.0137 415.5869 324.6748 427 317.8779 427 Cf*UUu0 D0.046296 0.220066 0.88571 0 1 0.823529 0 Xa252.9609 421.8203 m243.4741 431.6855 230.624 425.5107 231.5703 411.9658 c232.3599 400.8477 247.2568 378.5205 259.3047 373.8398 c269.7632 369.7686 269.0986 382.3271 267.9028 386.6523 c265.7852 394.3174 258.0103 416.5703 252.9609 421.8203 Cf*u0.929717 0.879728 0.890196 0.799985 0 0 0 Xa262.9883 370.875 m262.9878 370.875 l261.6392 370.875 260.1362 371.1943 258.5195 371.8232 c245.7363 376.79 230.2578 399.8984 229.4121 411.8125 c229.0527 416.957 230.4883 421.54 233.4546 424.7217 c235.9224 427.3672 239.2544 428.8252 242.8369 428.8252 c246.9575 428.8252 251.1069 426.8701 254.5205 423.3203 c260.3042 417.3066 268.3462 393.1729 269.9888 387.2285 c270.6558 384.8154 271.7075 377.6592 268.604 373.5811 c267.2568 371.8105 265.3149 370.875 262.9883 370.875 Cf1 D242.8369 424.4971 m240.4678 424.4971 238.2598 423.5283 236.6196 421.7695 c234.481 419.4766 233.4541 416.0479 233.729 412.1162 c234.4619 401.7949 248.9844 380.1709 260.0884 375.8564 c261.2036 375.4229 262.1787 375.2031 262.9878 375.2031 c263.9644 375.2031 264.6343 375.5107 265.1602 376.2021 c266.7813 378.332 266.5835 383.3047 265.8174 386.0762 c263.585 394.1553 255.9878 415.5518 251.4014 420.3203 c248.811 423.0137 245.7695 424.4971 242.8369 424.4971 Cf*UULB%AI5_EndLayer--%%PageTrailergsave annotatepage grestore showpage%%TrailerAdobe_Illustrator_AI5 /terminate get exec
Adobe_shading_AI8 /terminate get exec
Adobe_ColorImage_AI6 /terminate get exec
Adobe_cshow /terminate get exec
Adobe_level2_AI5 /terminate get exec
%%EOF